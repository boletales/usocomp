[{"name": "higherOrderTest.slang", "result": {"src": "function main() -> int\n{\n  int $result_4plus2 = main.x_op_2(4, &main.add)\n  int $result_4minus2 = main.x_op_2(4, &main.sub)\n  int $result_4times2 = main.x_op_2(4, &main.mul)\n  return ((($result_4plus2 * 100) + ($result_4minus2 * 10)) + $result_4times2)\n}\n\nfunction main.add(int $x, int $y) -> int\n{\n  return ($x + $y)\n}\n\nfunction main.mul(int $x, int $y) -> int\n{\n  return ($x * $y)\n}\n\nfunction main.sub(int $x, int $y) -> int\n{\n  return ($x - $y)\n}\n\nfunction main.x_op_2(int $x, (int, int) -> int $op) -> int\n{\n  tailcall @@($op, $x, 2)\n}", "asm": "nop   \nconst r1 1\nconst r2 353\nstore r2 r1\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\nconst r2 0\naddi  r1 r1 1\nstore r2 r1\ncopy  r0 r1\nconst pc 12\nconst r2 4992\nlt    r2 r1 r2\naddi  r3 pc 6\njnz   r3 r2\nconst r2 0\nconst r3 -1000000000\nstore r3 r2\nconst r3 353\njump  r3\naddi  r1 r1 1\naddi  r1 r1 1\nconst r2 4\nstore r2 r1\naddi  r1 r1 1\nconst r2 141\nstore r2 r1\nconst r3 300\naddi  r1 r1 1\naddi  r2 pc 8\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r1 -4\nstore r2 r1\naddi  r1 r1 1\nstore r0 r1\ncopy  r0 r1\ncopy  pc r3\naddi  r1 r1 1\naddi  r1 r1 1\nconst r2 4\nstore r2 r1\naddi  r1 r1 1\nconst r2 247\nstore r2 r1\nconst r3 300\naddi  r1 r1 1\naddi  r2 pc 8\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r1 -4\nstore r2 r1\naddi  r1 r1 1\nstore r0 r1\ncopy  r0 r1\ncopy  pc r3\naddi  r1 r1 1\naddi  r1 r1 1\nconst r2 4\nstore r2 r1\naddi  r1 r1 1\nconst r2 194\nstore r2 r1\nconst r3 300\naddi  r1 r1 1\naddi  r2 pc 8\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r1 -4\nstore r2 r1\naddi  r1 r1 1\nstore r0 r1\ncopy  r0 r1\ncopy  pc r3\naddi  r1 r1 1\naddi  r2 r0 1\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\nconst r2 100\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\nmult  r2 r2 r3\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 2\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\nconst r2 10\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\nmult  r2 r2 r3\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\nadd   r2 r2 r3\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 3\nload  r2 r2\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\nadd   r2 r2 r3\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\naddi  r1 r1 -3\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\nconst r2 4998\nlt    r2 r1 r2\naddi  r3 pc 6\njnz   r3 r2\nconst r2 0\nconst r3 -1000000000\nstore r3 r2\nconst r3 353\njump  r3\naddi  r1 r1 1\naddi  r2 r0 -1\nload  r2 r2\naddi  r2 r2 1\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 -1\nload  r2 r2\naddi  r2 r2 2\nload  r2 r2\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\nadd   r2 r2 r3\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\nconst r2 4998\nlt    r2 r1 r2\naddi  r3 pc 6\njnz   r3 r2\nconst r2 0\nconst r3 -1000000000\nstore r3 r2\nconst r3 353\njump  r3\naddi  r1 r1 1\naddi  r2 r0 -1\nload  r2 r2\naddi  r2 r2 1\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 -1\nload  r2 r2\naddi  r2 r2 2\nload  r2 r2\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\nmult  r2 r2 r3\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\nconst r2 4998\nlt    r2 r1 r2\naddi  r3 pc 6\njnz   r3 r2\nconst r2 0\nconst r3 -1000000000\nstore r3 r2\nconst r3 353\njump  r3\naddi  r1 r1 1\naddi  r2 r0 -1\nload  r2 r2\naddi  r2 r2 1\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 -1\nload  r2 r2\naddi  r2 r2 2\nload  r2 r2\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\nsub   r2 r2 r3\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\nconst r2 4995\nlt    r2 r1 r2\naddi  r3 pc 6\njnz   r3 r2\nconst r2 0\nconst r3 -1000000000\nstore r3 r2\nconst r3 353\njump  r3\naddi  r1 r1 1\naddi  r2 r0 -1\nload  r2 r2\naddi  r2 r2 2\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 -1\nload  r2 r2\naddi  r2 r2 1\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\nconst r2 2\nstore r2 r1\naddi  r4 r1 -2\nload  r4 r4\naddi  r2 r1 -1\naddi  r3 r0 -1\nload  r1 r3\naddi  r1 r1 1\nload  r3 r2\nstore r3 r1\naddi  r2 r2 1\naddi  r1 r1 1\nload  r3 r2\nstore r3 r1\naddi  r1 r1 3\ncopy  pc r4\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\nnop   \n", "sourcemap": [{"sourcestart": {"line": 26, "col": 24}, "sourceend": {"line": 26, "col": 25}, "asmstart": 322, "asmend": 324, "slpos": "main.x_op_2[0].expr ($op, $x, 2).expr 2"}, {"sourcestart": {"line": 26, "col": 20}, "sourceend": {"line": 26, "col": 22}, "asmstart": 316, "asmend": 321, "slpos": "main.x_op_2[0].expr ($op, $x, 2).expr $x"}, {"sourcestart": {"line": 26, "col": 15}, "sourceend": {"line": 26, "col": 18}, "asmstart": 310, "asmend": 315, "slpos": "main.x_op_2[0].expr ($op, $x, 2).expr $op"}, {"sourcestart": {"line": 26, "col": 14}, "sourceend": {"line": 26, "col": 26}, "asmstart": 310, "asmend": 324, "slpos": "main.x_op_2[0].expr ($op, $x, 2)"}, {"sourcestart": {"line": 26, "col": 3}, "sourceend": {"line": 26, "col": 26}, "asmstart": 310, "asmend": 338, "slpos": "main.x_op_2[0]"}, {"sourcestart": {"line": 21, "col": 16}, "sourceend": {"line": 21, "col": 18}, "asmstart": 263, "asmend": 268, "slpos": "main.sub[0].expr ($x - $y).expr $y"}, {"sourcestart": {"line": 21, "col": 11}, "sourceend": {"line": 21, "col": 13}, "asmstart": 257, "asmend": 262, "slpos": "main.sub[0].expr ($x - $y).expr $x"}, {"sourcestart": {"line": 21, "col": 10}, "sourceend": {"line": 21, "col": 19}, "asmstart": 257, "asmend": 273, "slpos": "main.sub[0].expr ($x - $y)"}, {"sourcestart": {"line": 21, "col": 3}, "sourceend": {"line": 21, "col": 19}, "asmstart": 257, "asmend": 285, "slpos": "main.sub[0]"}, {"sourcestart": {"line": 16, "col": 16}, "sourceend": {"line": 16, "col": 18}, "asmstart": 210, "asmend": 215, "slpos": "main.mul[0].expr ($x * $y).expr $y"}, {"sourcestart": {"line": 16, "col": 11}, "sourceend": {"line": 16, "col": 13}, "asmstart": 204, "asmend": 209, "slpos": "main.mul[0].expr ($x * $y).expr $x"}, {"sourcestart": {"line": 16, "col": 10}, "sourceend": {"line": 16, "col": 19}, "asmstart": 204, "asmend": 220, "slpos": "main.mul[0].expr ($x * $y)"}, {"sourcestart": {"line": 16, "col": 3}, "sourceend": {"line": 16, "col": 19}, "asmstart": 204, "asmend": 232, "slpos": "main.mul[0]"}, {"sourcestart": {"line": 11, "col": 16}, "sourceend": {"line": 11, "col": 18}, "asmstart": 157, "asmend": 162, "slpos": "main.add[0].expr ($x + $y).expr $y"}, {"sourcestart": {"line": 11, "col": 11}, "sourceend": {"line": 11, "col": 13}, "asmstart": 151, "asmend": 156, "slpos": "main.add[0].expr ($x + $y).expr $x"}, {"sourcestart": {"line": 11, "col": 10}, "sourceend": {"line": 11, "col": 19}, "asmstart": 151, "asmend": 167, "slpos": "main.add[0].expr ($x + $y)"}, {"sourcestart": {"line": 11, "col": 3}, "sourceend": {"line": 11, "col": 19}, "asmstart": 151, "asmend": 179, "slpos": "main.add[0]"}, {"sourcestart": {"line": 6, "col": 63}, "sourceend": {"line": 6, "col": 78}, "asmstart": 105, "asmend": 108, "slpos": "main[3].expr ((($result_4plus2 * 100) + ($result_4minus2 * 10)) + $result_4times2).expr $result_4times2"}, {"sourcestart": {"line": 6, "col": 56}, "sourceend": {"line": 6, "col": 58}, "asmstart": 92, "asmend": 94, "slpos": "main[3].expr ((($result_4plus2 * 100) + ($result_4minus2 * 10)) + $result_4times2).expr (($result_4plus2 * 100) + ($result_4minus2 * 10)).expr ($result_4minus2 * 10).expr 10"}, {"sourcestart": {"line": 6, "col": 38}, "sourceend": {"line": 6, "col": 53}, "asmstart": 88, "asmend": 91, "slpos": "main[3].expr ((($result_4plus2 * 100) + ($result_4minus2 * 10)) + $result_4times2).expr (($result_4plus2 * 100) + ($result_4minus2 * 10)).expr ($result_4minus2 * 10).expr $result_4minus2"}, {"sourcestart": {"line": 6, "col": 37}, "sourceend": {"line": 6, "col": 59}, "asmstart": 88, "asmend": 99, "slpos": "main[3].expr ((($result_4plus2 * 100) + ($result_4minus2 * 10)) + $result_4times2).expr (($result_4plus2 * 100) + ($result_4minus2 * 10)).expr ($result_4minus2 * 10)"}, {"sourcestart": {"line": 6, "col": 30}, "sourceend": {"line": 6, "col": 33}, "asmstart": 80, "asmend": 82, "slpos": "main[3].expr ((($result_4plus2 * 100) + ($result_4minus2 * 10)) + $result_4times2).expr (($result_4plus2 * 100) + ($result_4minus2 * 10)).expr ($result_4plus2 * 100).expr 100"}, {"sourcestart": {"line": 6, "col": 13}, "sourceend": {"line": 6, "col": 27}, "asmstart": 76, "asmend": 79, "slpos": "main[3].expr ((($result_4plus2 * 100) + ($result_4minus2 * 10)) + $result_4times2).expr (($result_4plus2 * 100) + ($result_4minus2 * 10)).expr ($result_4plus2 * 100).expr $result_4plus2"}, {"sourcestart": {"line": 6, "col": 12}, "sourceend": {"line": 6, "col": 34}, "asmstart": 76, "asmend": 87, "slpos": "main[3].expr ((($result_4plus2 * 100) + ($result_4minus2 * 10)) + $result_4times2).expr (($result_4plus2 * 100) + ($result_4minus2 * 10)).expr ($result_4plus2 * 100)"}, {"sourcestart": {"line": 6, "col": 11}, "sourceend": {"line": 6, "col": 60}, "asmstart": 76, "asmend": 104, "slpos": "main[3].expr ((($result_4plus2 * 100) + ($result_4minus2 * 10)) + $result_4times2).expr (($result_4plus2 * 100) + ($result_4minus2 * 10))"}, {"sourcestart": {"line": 6, "col": 10}, "sourceend": {"line": 6, "col": 79}, "asmstart": 76, "asmend": 113, "slpos": "main[3].expr ((($result_4plus2 * 100) + ($result_4minus2 * 10)) + $result_4times2)"}, {"sourcestart": {"line": 6, "col": 3}, "sourceend": {"line": 6, "col": 79}, "asmstart": 76, "asmend": 125, "slpos": "main[3]"}, {"sourcestart": {"line": 5, "col": 36}, "sourceend": {"line": 5, "col": 50}, "asmstart": 59, "asmend": 64, "slpos": "main[2].expr main.x_op_2(4, &main.mul).expr (4, &main.mul)"}, {"sourcestart": {"line": 5, "col": 3}, "sourceend": {"line": 5, "col": 50}, "asmstart": 58, "asmend": 75, "slpos": "main[2]"}, {"sourcestart": {"line": 5, "col": 25}, "sourceend": {"line": 5, "col": 50}, "asmstart": 58, "asmend": 75, "slpos": "main[2].expr main.x_op_2(4, &main.mul)"}, {"sourcestart": {"line": 4, "col": 36}, "sourceend": {"line": 4, "col": 50}, "asmstart": 41, "asmend": 46, "slpos": "main[1].expr main.x_op_2(4, &main.sub).expr (4, &main.sub)"}, {"sourcestart": {"line": 4, "col": 3}, "sourceend": {"line": 4, "col": 50}, "asmstart": 40, "asmend": 57, "slpos": "main[1]"}, {"sourcestart": {"line": 4, "col": 25}, "sourceend": {"line": 4, "col": 50}, "asmstart": 40, "asmend": 57, "slpos": "main[1].expr main.x_op_2(4, &main.sub)"}, {"sourcestart": {"line": 3, "col": 35}, "sourceend": {"line": 3, "col": 49}, "asmstart": 23, "asmend": 28, "slpos": "main[0].expr main.x_op_2(4, &main.add).expr (4, &main.add)"}, {"sourcestart": {"line": 3, "col": 3}, "sourceend": {"line": 3, "col": 49}, "asmstart": 22, "asmend": 39, "slpos": "main[0]"}, {"sourcestart": {"line": 3, "col": 24}, "sourceend": {"line": 3, "col": 49}, "asmstart": 22, "asmend": 39, "slpos": "main[0].expr main.x_op_2(4, &main.add)"}]}}
, {"name": "smallTest.slang", "result": {"src": "function main() -> int\n{\n  return 12345\n}", "asm": "nop   \nconst r1 1\nconst r2 51\nstore r2 r1\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\nconst r2 0\naddi  r1 r1 1\nstore r2 r1\ncopy  r0 r1\nconst pc 12\nconst r2 4999\nlt    r2 r1 r2\naddi  r3 pc 6\njnz   r3 r2\nconst r2 0\nconst r3 -1000000000\nstore r3 r2\nconst r3 51\njump  r3\naddi  r1 r1 1\nconst r2 12345\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\nnop   \n", "sourcemap": [{"sourcestart": {"line": 3, "col": 10}, "sourceend": {"line": 3, "col": 15}, "asmstart": 22, "asmend": 24, "slpos": "main[0].expr 12345"}, {"sourcestart": {"line": 3, "col": 3}, "sourceend": {"line": 3, "col": 15}, "asmstart": 22, "asmend": 36, "slpos": "main[0]"}]}}
, {"name": "substTest.slang", "result": {"src": "function main() -> int\n{\n  int $i = 100\n  int $j = 200\n  int $k = 300\n  int $l = 400\n  $k = 10000\n  return ((($i + $j) + $k) + $l)\n}", "asm": "nop   \nconst r1 1\nconst r2 99\nstore r2 r1\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\nconst r2 0\naddi  r1 r1 1\nstore r2 r1\ncopy  r0 r1\nconst pc 12\nconst r2 4992\nlt    r2 r1 r2\naddi  r3 pc 6\njnz   r3 r2\nconst r2 0\nconst r3 -1000000000\nstore r3 r2\nconst r3 99\njump  r3\naddi  r1 r1 1\nconst r2 100\nstore r2 r1\naddi  r1 r1 1\nconst r2 200\nstore r2 r1\naddi  r1 r1 1\nconst r2 300\nstore r2 r1\naddi  r1 r1 1\nconst r2 400\nstore r2 r1\naddi  r1 r1 1\nconst r2 10000\nstore r2 r1\nload  r2 r1\naddi  r1 r1 -1\naddi  r3 r0 3\nstore r2 r3\naddi  r1 r1 1\naddi  r2 r0 1\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 2\nload  r2 r2\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\nadd   r2 r2 r3\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 3\nload  r2 r2\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\nadd   r2 r2 r3\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 4\nload  r2 r2\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\nadd   r2 r2 r3\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\naddi  r1 r1 -4\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\nnop   \n", "sourcemap": [{"sourcestart": {"line": 8, "col": 30}, "sourceend": {"line": 8, "col": 32}, "asmstart": 63, "asmend": 66, "slpos": "main[5].expr ((($i + $j) + $k) + $l).expr $l"}, {"sourcestart": {"line": 8, "col": 24}, "sourceend": {"line": 8, "col": 26}, "asmstart": 54, "asmend": 57, "slpos": "main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k).expr $k"}, {"sourcestart": {"line": 8, "col": 18}, "sourceend": {"line": 8, "col": 20}, "asmstart": 45, "asmend": 48, "slpos": "main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k).expr ($i + $j).expr $j"}, {"sourcestart": {"line": 8, "col": 13}, "sourceend": {"line": 8, "col": 15}, "asmstart": 41, "asmend": 44, "slpos": "main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k).expr ($i + $j).expr $i"}, {"sourcestart": {"line": 8, "col": 12}, "sourceend": {"line": 8, "col": 21}, "asmstart": 41, "asmend": 53, "slpos": "main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k).expr ($i + $j)"}, {"sourcestart": {"line": 8, "col": 11}, "sourceend": {"line": 8, "col": 27}, "asmstart": 41, "asmend": 62, "slpos": "main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k)"}, {"sourcestart": {"line": 8, "col": 10}, "sourceend": {"line": 8, "col": 33}, "asmstart": 41, "asmend": 71, "slpos": "main[5].expr ((($i + $j) + $k) + $l)"}, {"sourcestart": {"line": 8, "col": 3}, "sourceend": {"line": 8, "col": 33}, "asmstart": 41, "asmend": 83, "slpos": "main[5]"}, {"sourcestart": {"line": 7, "col": 8}, "sourceend": {"line": 7, "col": 13}, "asmstart": 34, "asmend": 36, "slpos": "main[4].expr 10000"}, {"sourcestart": {"line": 7, "col": 3}, "sourceend": {"line": 7, "col": 13}, "asmstart": 34, "asmend": 40, "slpos": "main[4]"}, {"sourcestart": {"line": 6, "col": 3}, "sourceend": {"line": 6, "col": 15}, "asmstart": 31, "asmend": 33, "slpos": "main[3]"}, {"sourcestart": {"line": 6, "col": 12}, "sourceend": {"line": 6, "col": 15}, "asmstart": 31, "asmend": 33, "slpos": "main[3].expr 400"}, {"sourcestart": {"line": 5, "col": 3}, "sourceend": {"line": 5, "col": 15}, "asmstart": 28, "asmend": 30, "slpos": "main[2]"}, {"sourcestart": {"line": 5, "col": 12}, "sourceend": {"line": 5, "col": 15}, "asmstart": 28, "asmend": 30, "slpos": "main[2].expr 300"}, {"sourcestart": {"line": 4, "col": 3}, "sourceend": {"line": 4, "col": 15}, "asmstart": 25, "asmend": 27, "slpos": "main[1]"}, {"sourcestart": {"line": 4, "col": 12}, "sourceend": {"line": 4, "col": 15}, "asmstart": 25, "asmend": 27, "slpos": "main[1].expr 200"}, {"sourcestart": {"line": 3, "col": 3}, "sourceend": {"line": 3, "col": 15}, "asmstart": 22, "asmend": 24, "slpos": "main[0]"}, {"sourcestart": {"line": 3, "col": 12}, "sourceend": {"line": 3, "col": 15}, "asmstart": 22, "asmend": 24, "slpos": "main[0].expr 100"}]}}
, {"name": "structTest2.slang", "result": {"src": "function main() -> int\n{\n  ((int, int, int), (int, int, int), (int, int, int)) $bigTuple = ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000))\n  return $bigTuple.1.1\n}", "asm": "nop   \nconst r1 1\nconst r2 82\nstore r2 r1\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\nconst r2 0\naddi  r1 r1 1\nstore r2 r1\ncopy  r0 r1\nconst pc 12\nconst r2 4990\nlt    r2 r1 r2\naddi  r3 pc 6\njnz   r3 r2\nconst r2 0\nconst r3 -1000000000\nstore r3 r2\nconst r3 82\njump  r3\naddi  r1 r1 1\nconst r2 100\nstore r2 r1\naddi  r1 r1 1\nconst r2 200\nstore r2 r1\naddi  r1 r1 1\nconst r2 300\nstore r2 r1\naddi  r1 r1 1\nconst r2 1000\nstore r2 r1\naddi  r1 r1 1\nconst r2 2000\nstore r2 r1\naddi  r1 r1 1\nconst r2 3000\nstore r2 r1\naddi  r1 r1 1\nconst r2 10000\nstore r2 r1\naddi  r1 r1 1\nconst r2 20000\nstore r2 r1\naddi  r1 r1 1\nconst r2 30000\nstore r2 r1\naddi  r2 r0 0\naddi  r2 r2 4\naddi  r1 r1 1\naddi  r2 r2 1\nload  r3 r2\nstore r3 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\naddi  r1 r1 -9\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\nnop   \n", "sourcemap": [{"sourcestart": {"line": 4, "col": 10}, "sourceend": {"line": 4, "col": 23}, "asmstart": 49, "asmend": 54, "slpos": "main[1].expr $bigTuple.1.1"}, {"sourcestart": {"line": 4, "col": 3}, "sourceend": {"line": 4, "col": 23}, "asmstart": 49, "asmend": 66, "slpos": "main[1]"}, {"sourcestart": {"line": 3, "col": 3}, "sourceend": {"line": 3, "col": 127}, "asmstart": 22, "asmend": 48, "slpos": "main[0]"}, {"sourcestart": {"line": 3, "col": 67}, "sourceend": {"line": 3, "col": 127}, "asmstart": 22, "asmend": 48, "slpos": "main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000))"}]}}
, {"name": "whileTest.slang", "result": {"src": "function main() -> int\n{\n  int $i = 1\n  while ($i < 1000)\n  {\n    $i = ($i + $i)\n  }\n\n  return $i\n}", "asm": "nop   \nconst r1 1\nconst r2 91\nstore r2 r1\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\nconst r2 0\naddi  r1 r1 1\nstore r2 r1\ncopy  r0 r1\nconst pc 12\nconst r2 4997\nlt    r2 r1 r2\naddi  r3 pc 6\njnz   r3 r2\nconst r2 0\nconst r3 -1000000000\nstore r3 r2\nconst r3 91\njump  r3\naddi  r1 r1 1\nconst r2 1\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 1\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\nconst r2 1000\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\nlt    r2 r2 r3\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\naddi  r2 pc 20\njz    r2 r3\naddi  r1 r1 1\naddi  r2 r0 1\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 1\nload  r2 r2\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\nadd   r2 r2 r3\nstore r2 r1\nload  r2 r1\naddi  r1 r1 -1\naddi  r3 r0 1\nstore r2 r3\naddi  r2 pc -34\njump  r2\naddi  r1 r1 1\naddi  r2 r0 1\nload  r2 r2\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\naddi  r1 r1 -1\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\nnop   \n", "sourcemap": [{"sourcestart": {"line": 9, "col": 10}, "sourceend": {"line": 9, "col": 12}, "asmstart": 60, "asmend": 63, "slpos": "main[2].expr $i"}, {"sourcestart": {"line": 9, "col": 3}, "sourceend": {"line": 9, "col": 12}, "asmstart": 60, "asmend": 75, "slpos": "main[2]"}, {"sourcestart": {"line": 6, "col": 16}, "sourceend": {"line": 6, "col": 18}, "asmstart": 41, "asmend": 48, "slpos": "main[1].whileBody[0].expr ($i + $i).expr $i"}, {"sourcestart": {"line": 6, "col": 10}, "sourceend": {"line": 6, "col": 19}, "asmstart": 41, "asmend": 53, "slpos": "main[1].whileBody[0].expr ($i + $i)"}, {"sourcestart": {"line": 6, "col": 5}, "sourceend": {"line": 6, "col": 19}, "asmstart": 41, "asmend": 57, "slpos": "main[1].whileBody[0]"}, {"sourcestart": {"line": 4, "col": 15}, "sourceend": {"line": 4, "col": 19}, "asmstart": 29, "asmend": 31, "slpos": "main[1].whileCond.expr ($i < 1000).expr 1000"}, {"sourcestart": {"line": 4, "col": 10}, "sourceend": {"line": 4, "col": 12}, "asmstart": 25, "asmend": 28, "slpos": "main[1].whileCond.expr ($i < 1000).expr $i"}, {"sourcestart": {"line": 4, "col": 9}, "sourceend": {"line": 4, "col": 20}, "asmstart": 25, "asmend": 36, "slpos": "main[1].whileCond.expr ($i < 1000)"}, {"sourcestart": {"line": 3, "col": 3}, "sourceend": {"line": 3, "col": 13}, "asmstart": 22, "asmend": 24, "slpos": "main[0]"}, {"sourcestart": {"line": 3, "col": 12}, "sourceend": {"line": 3, "col": 13}, "asmstart": 22, "asmend": 24, "slpos": "main[0].expr 1"}]}}
, {"name": "complexTest.slang", "result": {"src": "function main() -> int\n{\n  (int, int) $c1 = (100, 200)\n  (int, int) $c2 = (300, 400)\n  (int, int) $ans = main.complexProd($c1, $c2)\n  return $ans.1\n}\n\nfunction main.complexProd((int, int) $c1, (int, int) $c2) -> (int, int)\n{\n  int $re1 = $c1.0\n  int $im1 = $c1.1\n  int $re2 = $c2.0\n  int $im2 = $c2.1\n  int $reAns = (($re1 * $re2) - ($im1 * $im2))\n  int $imAns = (($re1 * $im2) + ($im1 * $re2))\n  return ($reAns, $imAns)\n}", "asm": "nop   \nconst r1 1\nconst r2 238\nstore r2 r1\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\nconst r2 0\naddi  r1 r1 1\nstore r2 r1\ncopy  r0 r1\nconst pc 12\nconst r2 4987\nlt    r2 r1 r2\naddi  r3 pc 6\njnz   r3 r2\nconst r2 0\nconst r3 -1000000000\nstore r3 r2\nconst r3 238\njump  r3\naddi  r1 r1 1\nconst r2 100\nstore r2 r1\naddi  r1 r1 1\nconst r2 200\nstore r2 r1\naddi  r1 r1 1\nconst r2 300\nstore r2 r1\naddi  r1 r1 1\nconst r2 400\nstore r2 r1\naddi  r1 r1 2\naddi  r1 r1 1\naddi  r2 r0 1\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 2\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 3\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 4\nload  r2 r2\nstore r2 r1\nconst r3 95\naddi  r1 r1 1\naddi  r2 pc 8\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r1 -6\nstore r2 r1\naddi  r1 r1 1\nstore r0 r1\ncopy  r0 r1\ncopy  pc r3\naddi  r2 r0 4\naddi  r2 r2 1\naddi  r1 r1 1\naddi  r2 r2 1\nload  r3 r2\nstore r3 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\naddi  r1 r1 -6\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\nconst r2 4992\nlt    r2 r1 r2\naddi  r3 pc 6\njnz   r3 r2\nconst r2 0\nconst r3 -1000000000\nstore r3 r2\nconst r3 238\njump  r3\naddi  r3 r0 -1\nload  r3 r3\naddi  r2 r3 0\naddi  r2 r2 0\naddi  r1 r1 1\naddi  r2 r2 1\nload  r3 r2\nstore r3 r1\naddi  r3 r0 -1\nload  r3 r3\naddi  r2 r3 0\naddi  r2 r2 1\naddi  r1 r1 1\naddi  r2 r2 1\nload  r3 r2\nstore r3 r1\naddi  r3 r0 -1\nload  r3 r3\naddi  r2 r3 2\naddi  r2 r2 0\naddi  r1 r1 1\naddi  r2 r2 1\nload  r3 r2\nstore r3 r1\naddi  r3 r0 -1\nload  r3 r3\naddi  r2 r3 2\naddi  r2 r2 1\naddi  r1 r1 1\naddi  r2 r2 1\nload  r3 r2\nstore r3 r1\naddi  r1 r1 1\naddi  r2 r0 1\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 3\nload  r2 r2\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\nmult  r2 r2 r3\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 2\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 4\nload  r2 r2\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\nmult  r2 r2 r3\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\nsub   r2 r2 r3\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 1\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 4\nload  r2 r2\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\nmult  r2 r2 r3\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 2\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 3\nload  r2 r2\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\nmult  r2 r2 r3\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\nadd   r2 r2 r3\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 5\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 6\nload  r2 r2\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\naddi  r1 r1 -6\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\nnop   \n", "sourcemap": [{"sourcestart": {"line": 17, "col": 19}, "sourceend": {"line": 17, "col": 25}, "asmstart": 203, "asmend": 206, "slpos": "main.complexProd[6].expr ($reAns, $imAns).expr $imAns"}, {"sourcestart": {"line": 17, "col": 11}, "sourceend": {"line": 17, "col": 17}, "asmstart": 199, "asmend": 202, "slpos": "main.complexProd[6].expr ($reAns, $imAns).expr $reAns"}, {"sourcestart": {"line": 17, "col": 10}, "sourceend": {"line": 17, "col": 26}, "asmstart": 199, "asmend": 206, "slpos": "main.complexProd[6].expr ($reAns, $imAns)"}, {"sourcestart": {"line": 17, "col": 3}, "sourceend": {"line": 17, "col": 26}, "asmstart": 199, "asmend": 222, "slpos": "main.complexProd[6]"}, {"sourcestart": {"line": 16, "col": 41}, "sourceend": {"line": 16, "col": 45}, "asmstart": 185, "asmend": 188, "slpos": "main.complexProd[5].expr (($re1 * $im2) + ($im1 * $re2)).expr ($im1 * $re2).expr $re2"}, {"sourcestart": {"line": 16, "col": 34}, "sourceend": {"line": 16, "col": 38}, "asmstart": 181, "asmend": 184, "slpos": "main.complexProd[5].expr (($re1 * $im2) + ($im1 * $re2)).expr ($im1 * $re2).expr $im1"}, {"sourcestart": {"line": 16, "col": 33}, "sourceend": {"line": 16, "col": 46}, "asmstart": 181, "asmend": 193, "slpos": "main.complexProd[5].expr (($re1 * $im2) + ($im1 * $re2)).expr ($im1 * $re2)"}, {"sourcestart": {"line": 16, "col": 25}, "sourceend": {"line": 16, "col": 29}, "asmstart": 172, "asmend": 175, "slpos": "main.complexProd[5].expr (($re1 * $im2) + ($im1 * $re2)).expr ($re1 * $im2).expr $im2"}, {"sourcestart": {"line": 16, "col": 18}, "sourceend": {"line": 16, "col": 22}, "asmstart": 168, "asmend": 171, "slpos": "main.complexProd[5].expr (($re1 * $im2) + ($im1 * $re2)).expr ($re1 * $im2).expr $re1"}, {"sourcestart": {"line": 16, "col": 17}, "sourceend": {"line": 16, "col": 30}, "asmstart": 168, "asmend": 180, "slpos": "main.complexProd[5].expr (($re1 * $im2) + ($im1 * $re2)).expr ($re1 * $im2)"}, {"sourcestart": {"line": 16, "col": 3}, "sourceend": {"line": 16, "col": 47}, "asmstart": 168, "asmend": 198, "slpos": "main.complexProd[5]"}, {"sourcestart": {"line": 16, "col": 16}, "sourceend": {"line": 16, "col": 47}, "asmstart": 168, "asmend": 198, "slpos": "main.complexProd[5].expr (($re1 * $im2) + ($im1 * $re2))"}, {"sourcestart": {"line": 15, "col": 41}, "sourceend": {"line": 15, "col": 45}, "asmstart": 154, "asmend": 157, "slpos": "main.complexProd[4].expr (($re1 * $re2) - ($im1 * $im2)).expr ($im1 * $im2).expr $im2"}, {"sourcestart": {"line": 15, "col": 34}, "sourceend": {"line": 15, "col": 38}, "asmstart": 150, "asmend": 153, "slpos": "main.complexProd[4].expr (($re1 * $re2) - ($im1 * $im2)).expr ($im1 * $im2).expr $im1"}, {"sourcestart": {"line": 15, "col": 33}, "sourceend": {"line": 15, "col": 46}, "asmstart": 150, "asmend": 162, "slpos": "main.complexProd[4].expr (($re1 * $re2) - ($im1 * $im2)).expr ($im1 * $im2)"}, {"sourcestart": {"line": 15, "col": 25}, "sourceend": {"line": 15, "col": 29}, "asmstart": 141, "asmend": 144, "slpos": "main.complexProd[4].expr (($re1 * $re2) - ($im1 * $im2)).expr ($re1 * $re2).expr $re2"}, {"sourcestart": {"line": 15, "col": 18}, "sourceend": {"line": 15, "col": 22}, "asmstart": 137, "asmend": 140, "slpos": "main.complexProd[4].expr (($re1 * $re2) - ($im1 * $im2)).expr ($re1 * $re2).expr $re1"}, {"sourcestart": {"line": 15, "col": 17}, "sourceend": {"line": 15, "col": 30}, "asmstart": 137, "asmend": 149, "slpos": "main.complexProd[4].expr (($re1 * $re2) - ($im1 * $im2)).expr ($re1 * $re2)"}, {"sourcestart": {"line": 15, "col": 3}, "sourceend": {"line": 15, "col": 47}, "asmstart": 137, "asmend": 167, "slpos": "main.complexProd[4]"}, {"sourcestart": {"line": 15, "col": 16}, "sourceend": {"line": 15, "col": 47}, "asmstart": 137, "asmend": 167, "slpos": "main.complexProd[4].expr (($re1 * $re2) - ($im1 * $im2))"}, {"sourcestart": {"line": 14, "col": 3}, "sourceend": {"line": 14, "col": 19}, "asmstart": 129, "asmend": 136, "slpos": "main.complexProd[3]"}, {"sourcestart": {"line": 14, "col": 14}, "sourceend": {"line": 14, "col": 19}, "asmstart": 129, "asmend": 136, "slpos": "main.complexProd[3].expr $c2.1"}, {"sourcestart": {"line": 13, "col": 3}, "sourceend": {"line": 13, "col": 19}, "asmstart": 121, "asmend": 128, "slpos": "main.complexProd[2]"}, {"sourcestart": {"line": 13, "col": 14}, "sourceend": {"line": 13, "col": 19}, "asmstart": 121, "asmend": 128, "slpos": "main.complexProd[2].expr $c2.0"}, {"sourcestart": {"line": 12, "col": 3}, "sourceend": {"line": 12, "col": 19}, "asmstart": 113, "asmend": 120, "slpos": "main.complexProd[1]"}, {"sourcestart": {"line": 12, "col": 14}, "sourceend": {"line": 12, "col": 19}, "asmstart": 113, "asmend": 120, "slpos": "main.complexProd[1].expr $c1.1"}, {"sourcestart": {"line": 11, "col": 3}, "sourceend": {"line": 11, "col": 19}, "asmstart": 105, "asmend": 112, "slpos": "main.complexProd[0]"}, {"sourcestart": {"line": 11, "col": 14}, "sourceend": {"line": 11, "col": 19}, "asmstart": 105, "asmend": 112, "slpos": "main.complexProd[0].expr $c1.0"}, {"sourcestart": {"line": 6, "col": 10}, "sourceend": {"line": 6, "col": 16}, "asmstart": 62, "asmend": 67, "slpos": "main[3].expr $ans.1"}, {"sourcestart": {"line": 6, "col": 3}, "sourceend": {"line": 6, "col": 16}, "asmstart": 62, "asmend": 79, "slpos": "main[3]"}, {"sourcestart": {"line": 5, "col": 37}, "sourceend": {"line": 5, "col": 47}, "asmstart": 35, "asmend": 50, "slpos": "main[2].expr main.complexProd($c1, $c2).expr ($c1, $c2)"}, {"sourcestart": {"line": 5, "col": 3}, "sourceend": {"line": 5, "col": 47}, "asmstart": 34, "asmend": 61, "slpos": "main[2]"}, {"sourcestart": {"line": 5, "col": 21}, "sourceend": {"line": 5, "col": 47}, "asmstart": 34, "asmend": 61, "slpos": "main[2].expr main.complexProd($c1, $c2)"}, {"sourcestart": {"line": 4, "col": 26}, "sourceend": {"line": 4, "col": 29}, "asmstart": 31, "asmend": 33, "slpos": "main[1].expr (300, 400).expr 400"}, {"sourcestart": {"line": 4, "col": 21}, "sourceend": {"line": 4, "col": 24}, "asmstart": 28, "asmend": 30, "slpos": "main[1].expr (300, 400).expr 300"}, {"sourcestart": {"line": 4, "col": 3}, "sourceend": {"line": 4, "col": 30}, "asmstart": 28, "asmend": 33, "slpos": "main[1]"}, {"sourcestart": {"line": 4, "col": 20}, "sourceend": {"line": 4, "col": 30}, "asmstart": 28, "asmend": 33, "slpos": "main[1].expr (300, 400)"}, {"sourcestart": {"line": 3, "col": 26}, "sourceend": {"line": 3, "col": 29}, "asmstart": 25, "asmend": 27, "slpos": "main[0].expr (100, 200).expr 200"}, {"sourcestart": {"line": 3, "col": 21}, "sourceend": {"line": 3, "col": 24}, "asmstart": 22, "asmend": 24, "slpos": "main[0].expr (100, 200).expr 100"}, {"sourcestart": {"line": 3, "col": 3}, "sourceend": {"line": 3, "col": 30}, "asmstart": 22, "asmend": 27, "slpos": "main[0]"}, {"sourcestart": {"line": 3, "col": 20}, "sourceend": {"line": 3, "col": 30}, "asmstart": 22, "asmend": 27, "slpos": "main[0].expr (100, 200)"}]}}
, {"name": "tailRecTest.slang", "result": {"src": "function main() -> int\n{\n  int $fib20 = main.fibonacci(20, 0, 1)\n  return $fib20\n}\n\nfunction main.fibonacci(int $steps, int $a, int $b) -> int\n{\n  if ($steps == 0)\n  {\n    return $b\n  }\n  else\n  {\n    tailcall main.fibonacci(($steps - 1), $b, ($a + $b))\n  }\n\n}", "asm": "nop   \nconst r1 1\nconst r2 190\nstore r2 r1\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\nconst r2 0\naddi  r1 r1 1\nstore r2 r1\ncopy  r0 r1\nconst pc 12\nconst r2 4993\nlt    r2 r1 r2\naddi  r3 pc 6\njnz   r3 r2\nconst r2 0\nconst r3 -1000000000\nstore r3 r2\nconst r3 190\njump  r3\naddi  r1 r1 1\naddi  r1 r1 1\nconst r2 20\nstore r2 r1\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\naddi  r1 r1 1\nconst r2 1\nstore r2 r1\nconst r3 74\naddi  r1 r1 1\naddi  r2 pc 8\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r1 -5\nstore r2 r1\naddi  r1 r1 1\nstore r0 r1\ncopy  r0 r1\ncopy  pc r3\naddi  r1 r1 1\naddi  r2 r0 1\nload  r2 r2\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\naddi  r1 r1 -1\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\nconst r2 4994\nlt    r2 r1 r2\naddi  r3 pc 6\njnz   r3 r2\nconst r2 0\nconst r3 -1000000000\nstore r3 r2\nconst r3 190\njump  r3\naddi  r1 r1 1\naddi  r2 r0 -1\nload  r2 r2\naddi  r2 r2 1\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\neq    r2 r2 r3\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\naddi  r2 pc 21\njz    r2 r3\naddi  r1 r1 1\naddi  r2 r0 -1\nload  r2 r2\naddi  r2 r2 3\nload  r2 r2\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\naddi  r2 pc 55\njump  r2\naddi  r1 r1 1\naddi  r2 r0 -1\nload  r2 r2\naddi  r2 r2 1\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\nconst r2 1\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\nsub   r2 r2 r3\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 -1\nload  r2 r2\naddi  r2 r2 3\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 -1\nload  r2 r2\naddi  r2 r2 2\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 -1\nload  r2 r2\naddi  r2 r2 3\nload  r2 r2\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\nadd   r2 r2 r3\nstore r2 r1\nconst r4 74\naddi  r2 r1 -2\naddi  r3 r0 -1\nload  r1 r3\naddi  r1 r1 1\nload  r3 r2\nstore r3 r1\naddi  r2 r2 1\naddi  r1 r1 1\nload  r3 r2\nstore r3 r1\naddi  r2 r2 1\naddi  r1 r1 1\nload  r3 r2\nstore r3 r1\naddi  r1 r1 3\ncopy  pc r4\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\nnop   \n", "sourcemap": [{"sourcestart": {"line": 15, "col": 53}, "sourceend": {"line": 15, "col": 55}, "asmstart": 148, "asmend": 153, "slpos": "main.fibonacci[0].ifElseBody[0].expr (($steps - 1), $b, ($a + $b)).expr ($a + $b).expr $b"}, {"sourcestart": {"line": 15, "col": 48}, "sourceend": {"line": 15, "col": 50}, "asmstart": 142, "asmend": 147, "slpos": "main.fibonacci[0].ifElseBody[0].expr (($steps - 1), $b, ($a + $b)).expr ($a + $b).expr $a"}, {"sourcestart": {"line": 15, "col": 47}, "sourceend": {"line": 15, "col": 56}, "asmstart": 142, "asmend": 158, "slpos": "main.fibonacci[0].ifElseBody[0].expr (($steps - 1), $b, ($a + $b)).expr ($a + $b)"}, {"sourcestart": {"line": 15, "col": 43}, "sourceend": {"line": 15, "col": 45}, "asmstart": 136, "asmend": 141, "slpos": "main.fibonacci[0].ifElseBody[0].expr (($steps - 1), $b, ($a + $b)).expr $b"}, {"sourcestart": {"line": 15, "col": 39}, "sourceend": {"line": 15, "col": 40}, "asmstart": 128, "asmend": 130, "slpos": "main.fibonacci[0].ifElseBody[0].expr (($steps - 1), $b, ($a + $b)).expr ($steps - 1).expr 1"}, {"sourcestart": {"line": 15, "col": 30}, "sourceend": {"line": 15, "col": 36}, "asmstart": 122, "asmend": 127, "slpos": "main.fibonacci[0].ifElseBody[0].expr (($steps - 1), $b, ($a + $b)).expr ($steps - 1).expr $steps"}, {"sourcestart": {"line": 15, "col": 29}, "sourceend": {"line": 15, "col": 41}, "asmstart": 122, "asmend": 135, "slpos": "main.fibonacci[0].ifElseBody[0].expr (($steps - 1), $b, ($a + $b)).expr ($steps - 1)"}, {"sourcestart": {"line": 15, "col": 28}, "sourceend": {"line": 15, "col": 57}, "asmstart": 122, "asmend": 158, "slpos": "main.fibonacci[0].ifElseBody[0].expr (($steps - 1), $b, ($a + $b))"}, {"sourcestart": {"line": 15, "col": 5}, "sourceend": {"line": 15, "col": 57}, "asmstart": 122, "asmend": 175, "slpos": "main.fibonacci[0].ifElseBody[0]"}, {"sourcestart": {"line": 11, "col": 12}, "sourceend": {"line": 11, "col": 14}, "asmstart": 102, "asmend": 107, "slpos": "main.fibonacci[0].ifBody_0[0].expr $b"}, {"sourcestart": {"line": 11, "col": 5}, "sourceend": {"line": 11, "col": 14}, "asmstart": 102, "asmend": 119, "slpos": "main.fibonacci[0].ifBody_0[0]"}, {"sourcestart": {"line": 9, "col": 17}, "sourceend": {"line": 9, "col": 18}, "asmstart": 90, "asmend": 92, "slpos": "main.fibonacci[0].ifCond_0.expr ($steps == 0).expr 0"}, {"sourcestart": {"line": 9, "col": 7}, "sourceend": {"line": 9, "col": 13}, "asmstart": 84, "asmend": 89, "slpos": "main.fibonacci[0].ifCond_0.expr ($steps == 0).expr $steps"}, {"sourcestart": {"line": 9, "col": 6}, "sourceend": {"line": 9, "col": 19}, "asmstart": 84, "asmend": 97, "slpos": "main.fibonacci[0].ifCond_0.expr ($steps == 0)"}, {"sourcestart": {"line": 4, "col": 10}, "sourceend": {"line": 4, "col": 16}, "asmstart": 43, "asmend": 46, "slpos": "main[1].expr $fib20"}, {"sourcestart": {"line": 4, "col": 3}, "sourceend": {"line": 4, "col": 16}, "asmstart": 43, "asmend": 58, "slpos": "main[1]"}, {"sourcestart": {"line": 3, "col": 30}, "sourceend": {"line": 3, "col": 40}, "asmstart": 23, "asmend": 31, "slpos": "main[0].expr main.fibonacci(20, 0, 1).expr (20, 0, 1)"}, {"sourcestart": {"line": 3, "col": 3}, "sourceend": {"line": 3, "col": 40}, "asmstart": 22, "asmend": 42, "slpos": "main[0]"}, {"sourcestart": {"line": 3, "col": 16}, "sourceend": {"line": 3, "col": 40}, "asmstart": 22, "asmend": 42, "slpos": "main[0].expr main.fibonacci(20, 0, 1)"}]}}
, {"name": "stackOverflowTest.slang", "result": {"error": "main.slang:12:7:\n   |\n12 |   else\n   |       ^\nInvalid expression (forgot to put $?)\n"}}
, {"name": "error.slang", "result": {"src": "function main() -> int {\n  int $x = 100\n  (int, int, int) $str = (200, 300, 400)\n  int $y = ($x + $str.2)\n  return $y\n}", "asm": "nop   \nconst r1 1\nconst r2 80\nstore r2 r1\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\nconst r2 0\naddi  r1 r1 1\nstore r2 r1\ncopy  r0 r1\nconst pc 12\nconst r2 4994\nlt    r2 r1 r2\naddi  r3 pc 6\njnz   r3 r2\nconst r2 0\nconst r3 -1000000000\nstore r3 r2\nconst r3 80\njump  r3\naddi  r1 r1 1\nconst r2 100\nstore r2 r1\naddi  r1 r1 1\nconst r2 200\nstore r2 r1\naddi  r1 r1 1\nconst r2 300\nstore r2 r1\naddi  r1 r1 1\nconst r2 400\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 1\nload  r2 r2\nstore r2 r1\naddi  r2 r0 1\naddi  r2 r2 2\naddi  r1 r1 1\naddi  r2 r2 1\nload  r3 r2\nstore r3 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\nadd   r2 r2 r3\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 5\nload  r2 r2\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\naddi  r1 r1 -5\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\nnop   \n", "sourcemap": [{"sourcestart": {"line": 5, "col": 10}, "sourceend": {"line": 5, "col": 12}, "asmstart": 49, "asmend": 52, "slpos": "main[3].expr $y"}, {"sourcestart": {"line": 5, "col": 3}, "sourceend": {"line": 5, "col": 12}, "asmstart": 49, "asmend": 64, "slpos": "main[3]"}, {"sourcestart": {"line": 4, "col": 13}, "sourceend": {"line": 4, "col": 15}, "asmstart": 34, "asmend": 37, "slpos": "main[2].expr ($x + $str.2).expr $x"}, {"sourcestart": {"line": 4, "col": 3}, "sourceend": {"line": 4, "col": 25}, "asmstart": 34, "asmend": 48, "slpos": "main[2]"}, {"sourcestart": {"line": 4, "col": 12}, "sourceend": {"line": 4, "col": 25}, "asmstart": 34, "asmend": 48, "slpos": "main[2].expr ($x + $str.2)"}, {"sourcestart": {"line": 3, "col": 37}, "sourceend": {"line": 3, "col": 40}, "asmstart": 31, "asmend": 33, "slpos": "main[1].expr (200, 300, 400).expr 400"}, {"sourcestart": {"line": 3, "col": 32}, "sourceend": {"line": 3, "col": 35}, "asmstart": 28, "asmend": 30, "slpos": "main[1].expr (200, 300, 400).expr 300"}, {"sourcestart": {"line": 3, "col": 27}, "sourceend": {"line": 3, "col": 30}, "asmstart": 25, "asmend": 27, "slpos": "main[1].expr (200, 300, 400).expr 200"}, {"sourcestart": {"line": 3, "col": 3}, "sourceend": {"line": 3, "col": 41}, "asmstart": 25, "asmend": 33, "slpos": "main[1]"}, {"sourcestart": {"line": 3, "col": 26}, "sourceend": {"line": 3, "col": 41}, "asmstart": 25, "asmend": 33, "slpos": "main[1].expr (200, 300, 400)"}, {"sourcestart": {"line": 2, "col": 3}, "sourceend": {"line": 2, "col": 15}, "asmstart": 22, "asmend": 24, "slpos": "main[0]"}, {"sourcestart": {"line": 2, "col": 12}, "sourceend": {"line": 2, "col": 15}, "asmstart": 22, "asmend": 24, "slpos": "main[0].expr 100"}]}}
, {"name": "recTest.slang", "result": {"error": "main.slang:22:7:\n   |\n22 |   else\n   |       ^\nInvalid expression (forgot to put $?)\n"}}
, {"name": "tarai.slang", "result": {"error": "main.slang:6:18:\n  |\n6 |   when ($x > $y) {\n  |                  ^\nunexpected '{'\nexpecting \"&&\", \"<<\", \"==\", \"@+\", \"||\", '&', '*', '+', '-', '.', ';', '<', '>', '^', '|', '}', end of input, newline, or white space\n"}}
, {"name": "ifTest.slang", "result": {"src": "function main() -> int\n{\n  int $i = 100\n  int $j = 200\n  int $a = 1000\n  int $b = 2000\n  int $c = 3000\n  int $d = 4000\n  if ($i > $j)\n  {\n    $a = 10000\n  }\n  else\n  {\n    $a = 20000\n  }\n\n  if ($i < $j)\n  {\n    $b = 10000\n  }\n  else\n  {\n    $b = 20000\n  }\n\n  if ($j > $i)\n  {\n    $c = 10000\n  }\n  else\n  {\n    $c = 20000\n  }\n\n  if ($j < $i)\n  {\n    $d = 10000\n  }\n  else\n  {\n    $d = 20000\n  }\n\n  return 0\n}", "asm": "nop   \nconst r1 1\nconst r2 202\nstore r2 r1\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\nconst r2 0\naddi  r1 r1 1\nstore r2 r1\ncopy  r0 r1\nconst pc 12\nconst r2 4992\nlt    r2 r1 r2\naddi  r3 pc 6\njnz   r3 r2\nconst r2 0\nconst r3 -1000000000\nstore r3 r2\nconst r3 202\njump  r3\naddi  r1 r1 1\nconst r2 100\nstore r2 r1\naddi  r1 r1 1\nconst r2 200\nstore r2 r1\naddi  r1 r1 1\nconst r2 1000\nstore r2 r1\naddi  r1 r1 1\nconst r2 2000\nstore r2 r1\naddi  r1 r1 1\nconst r2 3000\nstore r2 r1\naddi  r1 r1 1\nconst r2 4000\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 1\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 2\nload  r2 r2\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\ngt    r2 r2 r3\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\naddi  r2 pc 10\njz    r2 r3\naddi  r1 r1 1\nconst r2 10000\nstore r2 r1\nload  r2 r1\naddi  r1 r1 -1\naddi  r3 r0 3\nstore r2 r3\naddi  r2 pc 8\njump  r2\naddi  r1 r1 1\nconst r2 20000\nstore r2 r1\nload  r2 r1\naddi  r1 r1 -1\naddi  r3 r0 3\nstore r2 r3\naddi  r1 r1 1\naddi  r2 r0 1\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 2\nload  r2 r2\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\nlt    r2 r2 r3\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\naddi  r2 pc 10\njz    r2 r3\naddi  r1 r1 1\nconst r2 10000\nstore r2 r1\nload  r2 r1\naddi  r1 r1 -1\naddi  r3 r0 4\nstore r2 r3\naddi  r2 pc 8\njump  r2\naddi  r1 r1 1\nconst r2 20000\nstore r2 r1\nload  r2 r1\naddi  r1 r1 -1\naddi  r3 r0 4\nstore r2 r3\naddi  r1 r1 1\naddi  r2 r0 2\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 1\nload  r2 r2\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\ngt    r2 r2 r3\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\naddi  r2 pc 10\njz    r2 r3\naddi  r1 r1 1\nconst r2 10000\nstore r2 r1\nload  r2 r1\naddi  r1 r1 -1\naddi  r3 r0 5\nstore r2 r3\naddi  r2 pc 8\njump  r2\naddi  r1 r1 1\nconst r2 20000\nstore r2 r1\nload  r2 r1\naddi  r1 r1 -1\naddi  r3 r0 5\nstore r2 r3\naddi  r1 r1 1\naddi  r2 r0 2\nload  r2 r2\nstore r2 r1\naddi  r1 r1 1\naddi  r2 r0 1\nload  r2 r2\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\nload  r2 r1\nlt    r2 r2 r3\nstore r2 r1\nload  r3 r1\naddi  r1 r1 -1\naddi  r2 pc 10\njz    r2 r3\naddi  r1 r1 1\nconst r2 10000\nstore r2 r1\nload  r2 r1\naddi  r1 r1 -1\naddi  r3 r0 6\nstore r2 r3\naddi  r2 pc 8\njump  r2\naddi  r1 r1 1\nconst r2 20000\nstore r2 r1\nload  r2 r1\naddi  r1 r1 -1\naddi  r3 r0 6\nstore r2 r3\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\naddi  r1 r1 -6\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\nnop   \n", "sourcemap": [{"sourcestart": {"line": 45, "col": 10}, "sourceend": {"line": 45, "col": 11}, "asmstart": 172, "asmend": 174, "slpos": "main[10].expr 0"}, {"sourcestart": {"line": 45, "col": 3}, "sourceend": {"line": 45, "col": 11}, "asmstart": 172, "asmend": 186, "slpos": "main[10]"}, {"sourcestart": {"line": 42, "col": 10}, "sourceend": {"line": 42, "col": 15}, "asmstart": 165, "asmend": 167, "slpos": "main[9].ifElseBody[0].expr 20000"}, {"sourcestart": {"line": 42, "col": 5}, "sourceend": {"line": 42, "col": 15}, "asmstart": 165, "asmend": 171, "slpos": "main[9].ifElseBody[0]"}, {"sourcestart": {"line": 38, "col": 10}, "sourceend": {"line": 38, "col": 15}, "asmstart": 156, "asmend": 158, "slpos": "main[9].ifBody_0[0].expr 10000"}, {"sourcestart": {"line": 38, "col": 5}, "sourceend": {"line": 38, "col": 15}, "asmstart": 156, "asmend": 162, "slpos": "main[9].ifBody_0[0]"}, {"sourcestart": {"line": 36, "col": 12}, "sourceend": {"line": 36, "col": 14}, "asmstart": 143, "asmend": 146, "slpos": "main[9].ifCond_0.expr ($j < $i).expr $i"}, {"sourcestart": {"line": 36, "col": 7}, "sourceend": {"line": 36, "col": 9}, "asmstart": 139, "asmend": 142, "slpos": "main[9].ifCond_0.expr ($j < $i).expr $j"}, {"sourcestart": {"line": 36, "col": 6}, "sourceend": {"line": 36, "col": 15}, "asmstart": 139, "asmend": 151, "slpos": "main[9].ifCond_0.expr ($j < $i)"}, {"sourcestart": {"line": 33, "col": 10}, "sourceend": {"line": 33, "col": 15}, "asmstart": 132, "asmend": 134, "slpos": "main[8].ifElseBody[0].expr 20000"}, {"sourcestart": {"line": 33, "col": 5}, "sourceend": {"line": 33, "col": 15}, "asmstart": 132, "asmend": 138, "slpos": "main[8].ifElseBody[0]"}, {"sourcestart": {"line": 29, "col": 10}, "sourceend": {"line": 29, "col": 15}, "asmstart": 123, "asmend": 125, "slpos": "main[8].ifBody_0[0].expr 10000"}, {"sourcestart": {"line": 29, "col": 5}, "sourceend": {"line": 29, "col": 15}, "asmstart": 123, "asmend": 129, "slpos": "main[8].ifBody_0[0]"}, {"sourcestart": {"line": 27, "col": 12}, "sourceend": {"line": 27, "col": 14}, "asmstart": 110, "asmend": 113, "slpos": "main[8].ifCond_0.expr ($j > $i).expr $i"}, {"sourcestart": {"line": 27, "col": 7}, "sourceend": {"line": 27, "col": 9}, "asmstart": 106, "asmend": 109, "slpos": "main[8].ifCond_0.expr ($j > $i).expr $j"}, {"sourcestart": {"line": 27, "col": 6}, "sourceend": {"line": 27, "col": 15}, "asmstart": 106, "asmend": 118, "slpos": "main[8].ifCond_0.expr ($j > $i)"}, {"sourcestart": {"line": 24, "col": 10}, "sourceend": {"line": 24, "col": 15}, "asmstart": 99, "asmend": 101, "slpos": "main[7].ifElseBody[0].expr 20000"}, {"sourcestart": {"line": 24, "col": 5}, "sourceend": {"line": 24, "col": 15}, "asmstart": 99, "asmend": 105, "slpos": "main[7].ifElseBody[0]"}, {"sourcestart": {"line": 20, "col": 10}, "sourceend": {"line": 20, "col": 15}, "asmstart": 90, "asmend": 92, "slpos": "main[7].ifBody_0[0].expr 10000"}, {"sourcestart": {"line": 20, "col": 5}, "sourceend": {"line": 20, "col": 15}, "asmstart": 90, "asmend": 96, "slpos": "main[7].ifBody_0[0]"}, {"sourcestart": {"line": 18, "col": 12}, "sourceend": {"line": 18, "col": 14}, "asmstart": 77, "asmend": 80, "slpos": "main[7].ifCond_0.expr ($i < $j).expr $j"}, {"sourcestart": {"line": 18, "col": 7}, "sourceend": {"line": 18, "col": 9}, "asmstart": 73, "asmend": 76, "slpos": "main[7].ifCond_0.expr ($i < $j).expr $i"}, {"sourcestart": {"line": 18, "col": 6}, "sourceend": {"line": 18, "col": 15}, "asmstart": 73, "asmend": 85, "slpos": "main[7].ifCond_0.expr ($i < $j)"}, {"sourcestart": {"line": 15, "col": 10}, "sourceend": {"line": 15, "col": 15}, "asmstart": 66, "asmend": 68, "slpos": "main[6].ifElseBody[0].expr 20000"}, {"sourcestart": {"line": 15, "col": 5}, "sourceend": {"line": 15, "col": 15}, "asmstart": 66, "asmend": 72, "slpos": "main[6].ifElseBody[0]"}, {"sourcestart": {"line": 11, "col": 10}, "sourceend": {"line": 11, "col": 15}, "asmstart": 57, "asmend": 59, "slpos": "main[6].ifBody_0[0].expr 10000"}, {"sourcestart": {"line": 11, "col": 5}, "sourceend": {"line": 11, "col": 15}, "asmstart": 57, "asmend": 63, "slpos": "main[6].ifBody_0[0]"}, {"sourcestart": {"line": 9, "col": 12}, "sourceend": {"line": 9, "col": 14}, "asmstart": 44, "asmend": 47, "slpos": "main[6].ifCond_0.expr ($i > $j).expr $j"}, {"sourcestart": {"line": 9, "col": 7}, "sourceend": {"line": 9, "col": 9}, "asmstart": 40, "asmend": 43, "slpos": "main[6].ifCond_0.expr ($i > $j).expr $i"}, {"sourcestart": {"line": 9, "col": 6}, "sourceend": {"line": 9, "col": 15}, "asmstart": 40, "asmend": 52, "slpos": "main[6].ifCond_0.expr ($i > $j)"}, {"sourcestart": {"line": 8, "col": 3}, "sourceend": {"line": 8, "col": 16}, "asmstart": 37, "asmend": 39, "slpos": "main[5]"}, {"sourcestart": {"line": 8, "col": 12}, "sourceend": {"line": 8, "col": 16}, "asmstart": 37, "asmend": 39, "slpos": "main[5].expr 4000"}, {"sourcestart": {"line": 7, "col": 3}, "sourceend": {"line": 7, "col": 16}, "asmstart": 34, "asmend": 36, "slpos": "main[4]"}, {"sourcestart": {"line": 7, "col": 12}, "sourceend": {"line": 7, "col": 16}, "asmstart": 34, "asmend": 36, "slpos": "main[4].expr 3000"}, {"sourcestart": {"line": 6, "col": 3}, "sourceend": {"line": 6, "col": 16}, "asmstart": 31, "asmend": 33, "slpos": "main[3]"}, {"sourcestart": {"line": 6, "col": 12}, "sourceend": {"line": 6, "col": 16}, "asmstart": 31, "asmend": 33, "slpos": "main[3].expr 2000"}, {"sourcestart": {"line": 5, "col": 3}, "sourceend": {"line": 5, "col": 16}, "asmstart": 28, "asmend": 30, "slpos": "main[2]"}, {"sourcestart": {"line": 5, "col": 12}, "sourceend": {"line": 5, "col": 16}, "asmstart": 28, "asmend": 30, "slpos": "main[2].expr 1000"}, {"sourcestart": {"line": 4, "col": 3}, "sourceend": {"line": 4, "col": 15}, "asmstart": 25, "asmend": 27, "slpos": "main[1]"}, {"sourcestart": {"line": 4, "col": 12}, "sourceend": {"line": 4, "col": 15}, "asmstart": 25, "asmend": 27, "slpos": "main[1].expr 200"}, {"sourcestart": {"line": 3, "col": 3}, "sourceend": {"line": 3, "col": 15}, "asmstart": 22, "asmend": 24, "slpos": "main[0]"}, {"sourcestart": {"line": 3, "col": 12}, "sourceend": {"line": 3, "col": 15}, "asmstart": 22, "asmend": 24, "slpos": "main[0].expr 100"}]}}
, {"name": "structTest.slang", "result": {"src": "function main() -> int\n{\n  int $y = 100\n  (int, int, int) $tuple = (100, 200, 300)\n  int $4 = $tuple.2\n  return $4\n}", "asm": "nop   \nconst r1 1\nconst r2 71\nstore r2 r1\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\nconst r2 0\naddi  r1 r1 1\nstore r2 r1\ncopy  r0 r1\nconst pc 12\nconst r2 4994\nlt    r2 r1 r2\naddi  r3 pc 6\njnz   r3 r2\nconst r2 0\nconst r3 -1000000000\nstore r3 r2\nconst r3 71\njump  r3\naddi  r1 r1 1\nconst r2 100\nstore r2 r1\naddi  r1 r1 1\nconst r2 100\nstore r2 r1\naddi  r1 r1 1\nconst r2 200\nstore r2 r1\naddi  r1 r1 1\nconst r2 300\nstore r2 r1\naddi  r2 r0 1\naddi  r2 r2 2\naddi  r1 r1 1\naddi  r2 r2 1\nload  r3 r2\nstore r3 r1\naddi  r1 r1 1\naddi  r2 r0 5\nload  r2 r2\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\naddi  r1 r1 -5\naddi  r1 r1 1\nconst r2 0\nstore r2 r1\naddi  r3 r0 -1\nload  r3 r3\nload  r2 r1\nstore r2 r3\naddi  r1 r1 -1\naddi  r3 r3 -1\ncopy  r2 r0\nload  r0 r0\naddi  r2 r2 -1\nload  r1 r2\naddi  r2 r2 -1\nload  pc r2\nnop   \n", "sourcemap": [{"sourcestart": {"line": 6, "col": 10}, "sourceend": {"line": 6, "col": 12}, "asmstart": 40, "asmend": 43, "slpos": "main[3].expr $4"}, {"sourcestart": {"line": 6, "col": 3}, "sourceend": {"line": 6, "col": 12}, "asmstart": 40, "asmend": 55, "slpos": "main[3]"}, {"sourcestart": {"line": 5, "col": 3}, "sourceend": {"line": 5, "col": 20}, "asmstart": 34, "asmend": 39, "slpos": "main[2]"}, {"sourcestart": {"line": 5, "col": 12}, "sourceend": {"line": 5, "col": 20}, "asmstart": 34, "asmend": 39, "slpos": "main[2].expr $tuple.2"}, {"sourcestart": {"line": 4, "col": 39}, "sourceend": {"line": 4, "col": 42}, "asmstart": 31, "asmend": 33, "slpos": "main[1].expr (100, 200, 300).expr 300"}, {"sourcestart": {"line": 4, "col": 34}, "sourceend": {"line": 4, "col": 37}, "asmstart": 28, "asmend": 30, "slpos": "main[1].expr (100, 200, 300).expr 200"}, {"sourcestart": {"line": 4, "col": 29}, "sourceend": {"line": 4, "col": 32}, "asmstart": 25, "asmend": 27, "slpos": "main[1].expr (100, 200, 300).expr 100"}, {"sourcestart": {"line": 4, "col": 3}, "sourceend": {"line": 4, "col": 43}, "asmstart": 25, "asmend": 33, "slpos": "main[1]"}, {"sourcestart": {"line": 4, "col": 28}, "sourceend": {"line": 4, "col": 43}, "asmstart": 25, "asmend": 33, "slpos": "main[1].expr (100, 200, 300)"}, {"sourcestart": {"line": 3, "col": 3}, "sourceend": {"line": 3, "col": 15}, "asmstart": 22, "asmend": 24, "slpos": "main[0]"}, {"sourcestart": {"line": 3, "col": 12}, "sourceend": {"line": 3, "col": 15}, "asmstart": 22, "asmend": 24, "slpos": "main[0].expr 100"}]}}
]