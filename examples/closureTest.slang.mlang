
nop                                     #main
const r2 1                              #main
const r1 1                              #main
const r3 223                            #main
store r3 r1                             #main
add   r1 r1 r2                          #main
const r3 0                              #main
store r3 r1                             #main
const r3 0                              #main
add   r1 r1 r2                          #main
store r3 r1                             #main
copy  r0 r1                             #main
const pc 13                             #main
const r2 1                              #main[0].expr @@(&main.func1, 12345, &main.func2)
add   r1 r1 r2                          #main[0].expr @@(&main.func1, 12345, &main.func2)
const r2 1                              #main[0].expr @@(&main.func1, 12345, &main.func2).expr (&main.func1, 12345, &main.func2).expr &main.func1
add   r1 r1 r2                          #main[0].expr @@(&main.func1, 12345, &main.func2).expr (&main.func1, 12345, &main.func2).expr &main.func1
const r3 75                             #main[0].expr @@(&main.func1, 12345, &main.func2).expr (&main.func1, 12345, &main.func2).expr &main.func1
store r3 r1                             #main[0].expr @@(&main.func1, 12345, &main.func2).expr (&main.func1, 12345, &main.func2).expr &main.func1
const r2 1                              #main[0].expr @@(&main.func1, 12345, &main.func2).expr (&main.func1, 12345, &main.func2).expr 12345
add   r1 r1 r2                          #main[0].expr @@(&main.func1, 12345, &main.func2).expr (&main.func1, 12345, &main.func2).expr 12345
const r3 12345                          #main[0].expr @@(&main.func1, 12345, &main.func2).expr (&main.func1, 12345, &main.func2).expr 12345
store r3 r1                             #main[0].expr @@(&main.func1, 12345, &main.func2).expr (&main.func1, 12345, &main.func2).expr 12345
const r2 1                              #main[0].expr @@(&main.func1, 12345, &main.func2).expr (&main.func1, 12345, &main.func2).expr &main.func2
add   r1 r1 r2                          #main[0].expr @@(&main.func1, 12345, &main.func2).expr (&main.func1, 12345, &main.func2).expr &main.func2
const r3 167                            #main[0].expr @@(&main.func1, 12345, &main.func2).expr (&main.func1, 12345, &main.func2).expr &main.func2
store r3 r1                             #main[0].expr @@(&main.func1, 12345, &main.func2).expr (&main.func1, 12345, &main.func2).expr &main.func2
const r2 -2                             #main[0].expr @@(&main.func1, 12345, &main.func2)
add   r4 r1 r2                          #main[0].expr @@(&main.func1, 12345, &main.func2)
load  r4 r4                             #main[0].expr @@(&main.func1, 12345, &main.func2)
const r2 1                              #main[0].expr @@(&main.func1, 12345, &main.func2)
add   r1 r1 r2                          #main[0].expr @@(&main.func1, 12345, &main.func2)
const r3 9                              #main[0].expr @@(&main.func1, 12345, &main.func2)
add   r3 r3 pc                          #main[0].expr @@(&main.func1, 12345, &main.func2)
store r3 r1                             #main[0].expr @@(&main.func1, 12345, &main.func2)
add   r1 r1 r2                          #main[0].expr @@(&main.func1, 12345, &main.func2)
const r3 -4                             #main[0].expr @@(&main.func1, 12345, &main.func2)
add   r3 r1 r3                          #main[0].expr @@(&main.func1, 12345, &main.func2)
store r3 r1                             #main[0].expr @@(&main.func1, 12345, &main.func2)
add   r1 r1 r2                          #main[0].expr @@(&main.func1, 12345, &main.func2)
store r0 r1                             #main[0].expr @@(&main.func1, 12345, &main.func2)
copy  r0 r1                             #main[0].expr @@(&main.func1, 12345, &main.func2)
copy  pc r4                             #main[0].expr @@(&main.func1, 12345, &main.func2)
const r2 -1                             #main[0]
add   r4 r2 r0                          #main[0]
load  r4 r4                             #main[0]
load  r3 r1                             #main[0]
store r3 r4                             #main[0]
add   r1 r1 r2                          #main[0]
add   r4 r4 r2                          #main[0]
copy  r2 r0                             #main[0]
load  r0 r0                             #main[0]
const r3 -1                             #main[0]
add   r2 r2 r3                          #main[0]
load  r1 r2                             #main[0]
add   r2 r2 r3                          #main[0]
load  pc r2                             #main[0]
const r2 1                              #main.forceReturn.expr 0
add   r1 r1 r2                          #main.forceReturn.expr 0
const r3 0                              #main.forceReturn.expr 0
store r3 r1                             #main.forceReturn.expr 0
const r2 -1                             #main.forceReturn
add   r4 r2 r0                          #main.forceReturn
load  r4 r4                             #main.forceReturn
load  r3 r1                             #main.forceReturn
store r3 r4                             #main.forceReturn
add   r1 r1 r2                          #main.forceReturn
add   r4 r4 r2                          #main.forceReturn
copy  r2 r0                             #main.forceReturn
load  r0 r0                             #main.forceReturn
const r3 -1                             #main.forceReturn
add   r2 r2 r3                          #main.forceReturn
load  r1 r2                             #main.forceReturn
add   r2 r2 r3                          #main.forceReturn
load  pc r2                             #main.forceReturn
const r2 1                              #main.func1[0].expr 2345
add   r1 r1 r2                          #main.func1[0].expr 2345
const r3 2345                           #main.func1[0].expr 2345
store r3 r1                             #main.func1[0].expr 2345
const r2 1                              #main.func1[1].expr ($A1, $A0, $0).expr $A1
add   r1 r1 r2                          #main.func1[1].expr ($A1, $A0, $0).expr $A1
const r2 -1                             #main.func1[1].expr ($A1, $A0, $0).expr $A1
add   r2 r2 r0                          #main.func1[1].expr ($A1, $A0, $0).expr $A1
load  r2 r2                             #main.func1[1].expr ($A1, $A0, $0).expr $A1
const r3 2                              #main.func1[1].expr ($A1, $A0, $0).expr $A1
add   r2 r2 r3                          #main.func1[1].expr ($A1, $A0, $0).expr $A1
load  r2 r2                             #main.func1[1].expr ($A1, $A0, $0).expr $A1
store r2 r1                             #main.func1[1].expr ($A1, $A0, $0).expr $A1
const r2 1                              #main.func1[1].expr ($A1, $A0, $0).expr $A0
add   r1 r1 r2                          #main.func1[1].expr ($A1, $A0, $0).expr $A0
const r2 -1                             #main.func1[1].expr ($A1, $A0, $0).expr $A0
add   r2 r2 r0                          #main.func1[1].expr ($A1, $A0, $0).expr $A0
load  r2 r2                             #main.func1[1].expr ($A1, $A0, $0).expr $A0
const r3 1                              #main.func1[1].expr ($A1, $A0, $0).expr $A0
add   r2 r2 r3                          #main.func1[1].expr ($A1, $A0, $0).expr $A0
load  r2 r2                             #main.func1[1].expr ($A1, $A0, $0).expr $A0
store r2 r1                             #main.func1[1].expr ($A1, $A0, $0).expr $A0
const r2 1                              #main.func1[1].expr ($A1, $A0, $0).expr $0
add   r1 r1 r2                          #main.func1[1].expr ($A1, $A0, $0).expr $0
const r2 1                              #main.func1[1].expr ($A1, $A0, $0).expr $0
add   r2 r2 r0                          #main.func1[1].expr ($A1, $A0, $0).expr $0
load  r2 r2                             #main.func1[1].expr ($A1, $A0, $0).expr $0
store r2 r1                             #main.func1[1].expr ($A1, $A0, $0).expr $0
const r2 -2                             #main.func1[1]
add   r5 r1 r2                          #main.func1[1]
load  r5 r5                             #main.func1[1]
const r3 -2                             #main.func1[1]
add   r3 r3 r0                          #main.func1[1]
const r2 1                              #main.func1[1]
add   r1 r1 r2                          #main.func1[1]
load  r4 r3                             #main.func1[1]
store r4 r1                             #main.func1[1]
add   r3 r3 r2                          #main.func1[1]
add   r1 r1 r2                          #main.func1[1]
load  r4 r3                             #main.func1[1]
store r4 r1                             #main.func1[1]
add   r3 r3 r2                          #main.func1[1]
add   r1 r1 r2                          #main.func1[1]
load  r4 r3                             #main.func1[1]
store r4 r1                             #main.func1[1]
const r3 -4                             #main.func1[1]
add   r3 r3 r1                          #main.func1[1]
const r4 -1                             #main.func1[1]
add   r4 r1 r4                          #main.func1[1]
load  r1 r4                             #main.func1[1]
add   r1 r1 r2                          #main.func1[1]
const r4 4                              #main.func1[1]
add   r0 r1 r4                          #main.func1[1]
load  r4 r3                             #main.func1[1]
store r4 r1                             #main.func1[1]
add   r3 r3 r2                          #main.func1[1]
add   r1 r1 r2                          #main.func1[1]
load  r4 r3                             #main.func1[1]
store r4 r1                             #main.func1[1]
add   r3 r3 r2                          #main.func1[1]
add   r1 r1 r2                          #main.func1[1]
load  r4 r3                             #main.func1[1]
store r4 r1                             #main.func1[1]
add   r3 r3 r2                          #main.func1[1]
add   r1 r1 r2                          #main.func1[1]
load  r4 r3                             #main.func1[1]
store r4 r1                             #main.func1[1]
add   r3 r3 r2                          #main.func1[1]
add   r1 r1 r2                          #main.func1[1]
load  r4 r3                             #main.func1[1]
store r4 r1                             #main.func1[1]
copy  pc r5                             #main.func1[1]
const r2 -1                             #main.func1
add   r1 r1 r2                          #main.func1
const r2 1                              #main.func1.forceReturn.expr 0
add   r1 r1 r2                          #main.func1.forceReturn.expr 0
const r3 0                              #main.func1.forceReturn.expr 0
store r3 r1                             #main.func1.forceReturn.expr 0
const r2 -1                             #main.func1.forceReturn
add   r4 r2 r0                          #main.func1.forceReturn
load  r4 r4                             #main.func1.forceReturn
load  r3 r1                             #main.func1.forceReturn
store r3 r4                             #main.func1.forceReturn
add   r1 r1 r2                          #main.func1.forceReturn
add   r4 r4 r2                          #main.func1.forceReturn
copy  r2 r0                             #main.func1.forceReturn
load  r0 r0                             #main.func1.forceReturn
const r3 -1                             #main.func1.forceReturn
add   r2 r2 r3                          #main.func1.forceReturn
load  r1 r2                             #main.func1.forceReturn
add   r2 r2 r3                          #main.func1.forceReturn
load  pc r2                             #main.func1.forceReturn
const r2 1                              #main.func2[0].expr ($A0 - $A1).expr $A0
add   r1 r1 r2                          #main.func2[0].expr ($A0 - $A1).expr $A0
const r2 -1                             #main.func2[0].expr ($A0 - $A1).expr $A0
add   r2 r2 r0                          #main.func2[0].expr ($A0 - $A1).expr $A0
load  r2 r2                             #main.func2[0].expr ($A0 - $A1).expr $A0
const r3 1                              #main.func2[0].expr ($A0 - $A1).expr $A0
add   r2 r2 r3                          #main.func2[0].expr ($A0 - $A1).expr $A0
load  r2 r2                             #main.func2[0].expr ($A0 - $A1).expr $A0
store r2 r1                             #main.func2[0].expr ($A0 - $A1).expr $A0
const r2 1                              #main.func2[0].expr ($A0 - $A1).expr $A1
add   r1 r1 r2                          #main.func2[0].expr ($A0 - $A1).expr $A1
const r2 -1                             #main.func2[0].expr ($A0 - $A1).expr $A1
add   r2 r2 r0                          #main.func2[0].expr ($A0 - $A1).expr $A1
load  r2 r2                             #main.func2[0].expr ($A0 - $A1).expr $A1
const r3 2                              #main.func2[0].expr ($A0 - $A1).expr $A1
add   r2 r2 r3                          #main.func2[0].expr ($A0 - $A1).expr $A1
load  r2 r2                             #main.func2[0].expr ($A0 - $A1).expr $A1
store r2 r1                             #main.func2[0].expr ($A0 - $A1).expr $A1
const r2 -1                             #main.func2[0].expr ($A0 - $A1)
load  r4 r1                             #main.func2[0].expr ($A0 - $A1)
add   r1 r1 r2                          #main.func2[0].expr ($A0 - $A1)
load  r3 r1                             #main.func2[0].expr ($A0 - $A1)
sub   r3 r3 r4                          #main.func2[0].expr ($A0 - $A1)
store r3 r1                             #main.func2[0].expr ($A0 - $A1)
const r2 -1                             #main.func2[0]
add   r4 r2 r0                          #main.func2[0]
load  r4 r4                             #main.func2[0]
load  r3 r1                             #main.func2[0]
store r3 r4                             #main.func2[0]
add   r1 r1 r2                          #main.func2[0]
add   r4 r4 r2                          #main.func2[0]
copy  r2 r0                             #main.func2[0]
load  r0 r0                             #main.func2[0]
const r3 -1                             #main.func2[0]
add   r2 r2 r3                          #main.func2[0]
load  r1 r2                             #main.func2[0]
add   r2 r2 r3                          #main.func2[0]
load  pc r2                             #main.func2[0]
const r2 1                              #main.func2.forceReturn.expr 0
add   r1 r1 r2                          #main.func2.forceReturn.expr 0
const r3 0                              #main.func2.forceReturn.expr 0
store r3 r1                             #main.func2.forceReturn.expr 0
const r2 -1                             #main.func2.forceReturn
add   r4 r2 r0                          #main.func2.forceReturn
load  r4 r4                             #main.func2.forceReturn
load  r3 r1                             #main.func2.forceReturn
store r3 r4                             #main.func2.forceReturn
add   r1 r1 r2                          #main.func2.forceReturn
add   r4 r4 r2                          #main.func2.forceReturn
copy  r2 r0                             #main.func2.forceReturn
load  r0 r0                             #main.func2.forceReturn
const r3 -1                             #main.func2.forceReturn
add   r2 r2 r3                          #main.func2.forceReturn
load  r1 r2                             #main.func2.forceReturn
add   r2 r2 r3                          #main.func2.forceReturn
load  pc r2                             #main.func2.forceReturn
nop                                     #main