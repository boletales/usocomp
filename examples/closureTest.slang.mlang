
nop                                     #main
const r1 1                              #main
const r2 205                            #main
store r2 r1                             #main
addi  r1 r1 1                           #main
const r2 0                              #main
store r2 r1                             #main
const r2 0                              #main
addi  r1 r1 1                           #main
store r2 r1                             #main
copy  r0 r1                             #main
const pc 12                             #main
const r2 4994                           #main
lt    r2 r1 r2                          #main
addi  r3 pc 6                           #main
jnz   r3 r2                             #main
const r2 0                              #main
const r3 -1000000000                    #main
store r3 r2                             #main
const r3 205                            #main
jump  r3                                #main
addi  r1 r1 1                           #main[0].expr @@(&main.func1, 12345, &main.func2)
addi  r1 r1 1                           #main[0].expr @@(&main.func1, 12345, &main.func2).expr (&main.func1, 12345, &main.func2).expr &main.func1
const r2 70                             #main[0].expr @@(&main.func1, 12345, &main.func2).expr (&main.func1, 12345, &main.func2).expr &main.func1
store r2 r1                             #main[0].expr @@(&main.func1, 12345, &main.func2).expr (&main.func1, 12345, &main.func2).expr &main.func1
addi  r1 r1 1                           #main[0].expr @@(&main.func1, 12345, &main.func2).expr (&main.func1, 12345, &main.func2).expr 12345
const r2 12345                          #main[0].expr @@(&main.func1, 12345, &main.func2).expr (&main.func1, 12345, &main.func2).expr 12345
store r2 r1                             #main[0].expr @@(&main.func1, 12345, &main.func2).expr (&main.func1, 12345, &main.func2).expr 12345
addi  r1 r1 1                           #main[0].expr @@(&main.func1, 12345, &main.func2).expr (&main.func1, 12345, &main.func2).expr &main.func2
const r2 152                            #main[0].expr @@(&main.func1, 12345, &main.func2).expr (&main.func1, 12345, &main.func2).expr &main.func2
store r2 r1                             #main[0].expr @@(&main.func1, 12345, &main.func2).expr (&main.func1, 12345, &main.func2).expr &main.func2
addi  r3 r1 -2                          #main[0].expr @@(&main.func1, 12345, &main.func2)
load  r3 r3                             #main[0].expr @@(&main.func1, 12345, &main.func2)
addi  r1 r1 1                           #main[0].expr @@(&main.func1, 12345, &main.func2)
addi  r2 pc 8                           #main[0].expr @@(&main.func1, 12345, &main.func2)
store r2 r1                             #main[0].expr @@(&main.func1, 12345, &main.func2)
addi  r1 r1 1                           #main[0].expr @@(&main.func1, 12345, &main.func2)
addi  r2 r1 -4                          #main[0].expr @@(&main.func1, 12345, &main.func2)
store r2 r1                             #main[0].expr @@(&main.func1, 12345, &main.func2)
addi  r1 r1 1                           #main[0].expr @@(&main.func1, 12345, &main.func2)
store r0 r1                             #main[0].expr @@(&main.func1, 12345, &main.func2)
copy  r0 r1                             #main[0].expr @@(&main.func1, 12345, &main.func2)
copy  pc r3                             #main[0].expr @@(&main.func1, 12345, &main.func2)
addi  r3 r0 -1                          #main[0]
load  r3 r3                             #main[0]
load  r2 r1                             #main[0]
store r2 r3                             #main[0]
addi  r1 r1 -1                          #main[0]
addi  r3 r3 -1                          #main[0]
copy  r2 r0                             #main[0]
load  r0 r0                             #main[0]
addi  r2 r2 -1                          #main[0]
load  r1 r2                             #main[0]
addi  r2 r2 -1                          #main[0]
load  pc r2                             #main[0]
addi  r1 r1 1                           #main.forceReturn.expr 0
const r2 0                              #main.forceReturn.expr 0
store r2 r1                             #main.forceReturn.expr 0
addi  r3 r0 -1                          #main.forceReturn
load  r3 r3                             #main.forceReturn
load  r2 r1                             #main.forceReturn
store r2 r3                             #main.forceReturn
addi  r1 r1 -1                          #main.forceReturn
addi  r3 r3 -1                          #main.forceReturn
copy  r2 r0                             #main.forceReturn
load  r0 r0                             #main.forceReturn
addi  r2 r2 -1                          #main.forceReturn
load  r1 r2                             #main.forceReturn
addi  r2 r2 -1                          #main.forceReturn
load  pc r2                             #main.forceReturn
const r2 4994                           #main.func1
lt    r2 r1 r2                          #main.func1
addi  r3 pc 6                           #main.func1
jnz   r3 r2                             #main.func1
const r2 0                              #main.func1
const r3 -1000000000                    #main.func1
store r3 r2                             #main.func1
const r3 205                            #main.func1
jump  r3                                #main.func1
addi  r1 r1 1                           #main.func1[0].expr 2345
const r2 2345                           #main.func1[0].expr 2345
store r2 r1                             #main.func1[0].expr 2345
addi  r1 r1 1                           #main.func1[1].expr ($A1, $A0, $0).expr $A1
addi  r2 r0 -1                          #main.func1[1].expr ($A1, $A0, $0).expr $A1
load  r2 r2                             #main.func1[1].expr ($A1, $A0, $0).expr $A1
addi  r2 r2 2                           #main.func1[1].expr ($A1, $A0, $0).expr $A1
load  r2 r2                             #main.func1[1].expr ($A1, $A0, $0).expr $A1
store r2 r1                             #main.func1[1].expr ($A1, $A0, $0).expr $A1
addi  r1 r1 1                           #main.func1[1].expr ($A1, $A0, $0).expr $A0
addi  r2 r0 -1                          #main.func1[1].expr ($A1, $A0, $0).expr $A0
load  r2 r2                             #main.func1[1].expr ($A1, $A0, $0).expr $A0
addi  r2 r2 1                           #main.func1[1].expr ($A1, $A0, $0).expr $A0
load  r2 r2                             #main.func1[1].expr ($A1, $A0, $0).expr $A0
store r2 r1                             #main.func1[1].expr ($A1, $A0, $0).expr $A0
addi  r1 r1 1                           #main.func1[1].expr ($A1, $A0, $0).expr $0
addi  r2 r0 1                           #main.func1[1].expr ($A1, $A0, $0).expr $0
load  r2 r2                             #main.func1[1].expr ($A1, $A0, $0).expr $0
store r2 r1                             #main.func1[1].expr ($A1, $A0, $0).expr $0
addi  r4 r1 -2                          #main.func1[1]
load  r4 r4                             #main.func1[1]
addi  r2 r0 -2                          #main.func1[1]
addi  r1 r1 1                           #main.func1[1]
load  r3 r2                             #main.func1[1]
store r3 r1                             #main.func1[1]
addi  r2 r2 1                           #main.func1[1]
addi  r1 r1 1                           #main.func1[1]
load  r3 r2                             #main.func1[1]
store r3 r1                             #main.func1[1]
addi  r2 r2 1                           #main.func1[1]
addi  r1 r1 1                           #main.func1[1]
load  r3 r2                             #main.func1[1]
store r3 r1                             #main.func1[1]
addi  r2 r1 -4                          #main.func1[1]
addi  r3 r1 -1                          #main.func1[1]
load  r1 r3                             #main.func1[1]
addi  r1 r1 1                           #main.func1[1]
addi  r0 r1 4                           #main.func1[1]
load  r3 r2                             #main.func1[1]
store r3 r1                             #main.func1[1]
addi  r2 r2 1                           #main.func1[1]
addi  r1 r1 1                           #main.func1[1]
load  r3 r2                             #main.func1[1]
store r3 r1                             #main.func1[1]
addi  r2 r2 1                           #main.func1[1]
addi  r1 r1 1                           #main.func1[1]
load  r3 r2                             #main.func1[1]
store r3 r1                             #main.func1[1]
addi  r2 r2 1                           #main.func1[1]
addi  r1 r1 1                           #main.func1[1]
load  r3 r2                             #main.func1[1]
store r3 r1                             #main.func1[1]
addi  r2 r2 1                           #main.func1[1]
addi  r1 r1 1                           #main.func1[1]
load  r3 r2                             #main.func1[1]
store r3 r1                             #main.func1[1]
copy  pc r4                             #main.func1[1]
addi  r1 r1 -1                          #main.func1
addi  r1 r1 1                           #main.func1.forceReturn.expr 0
const r2 0                              #main.func1.forceReturn.expr 0
store r2 r1                             #main.func1.forceReturn.expr 0
addi  r3 r0 -1                          #main.func1.forceReturn
load  r3 r3                             #main.func1.forceReturn
load  r2 r1                             #main.func1.forceReturn
store r2 r3                             #main.func1.forceReturn
addi  r1 r1 -1                          #main.func1.forceReturn
addi  r3 r3 -1                          #main.func1.forceReturn
copy  r2 r0                             #main.func1.forceReturn
load  r0 r0                             #main.func1.forceReturn
addi  r2 r2 -1                          #main.func1.forceReturn
load  r1 r2                             #main.func1.forceReturn
addi  r2 r2 -1                          #main.func1.forceReturn
load  pc r2                             #main.func1.forceReturn
const r2 4998                           #main.func2
lt    r2 r1 r2                          #main.func2
addi  r3 pc 6                           #main.func2
jnz   r3 r2                             #main.func2
const r2 0                              #main.func2
const r3 -1000000000                    #main.func2
store r3 r2                             #main.func2
const r3 205                            #main.func2
jump  r3                                #main.func2
addi  r1 r1 1                           #main.func2[0].expr ($A0 - $A1).expr $A0
addi  r2 r0 -1                          #main.func2[0].expr ($A0 - $A1).expr $A0
load  r2 r2                             #main.func2[0].expr ($A0 - $A1).expr $A0
addi  r2 r2 1                           #main.func2[0].expr ($A0 - $A1).expr $A0
load  r2 r2                             #main.func2[0].expr ($A0 - $A1).expr $A0
store r2 r1                             #main.func2[0].expr ($A0 - $A1).expr $A0
addi  r1 r1 1                           #main.func2[0].expr ($A0 - $A1).expr $A1
addi  r2 r0 -1                          #main.func2[0].expr ($A0 - $A1).expr $A1
load  r2 r2                             #main.func2[0].expr ($A0 - $A1).expr $A1
addi  r2 r2 2                           #main.func2[0].expr ($A0 - $A1).expr $A1
load  r2 r2                             #main.func2[0].expr ($A0 - $A1).expr $A1
store r2 r1                             #main.func2[0].expr ($A0 - $A1).expr $A1
load  r3 r1                             #main.func2[0].expr ($A0 - $A1)
addi  r1 r1 -1                          #main.func2[0].expr ($A0 - $A1)
load  r2 r1                             #main.func2[0].expr ($A0 - $A1)
sub   r2 r2 r3                          #main.func2[0].expr ($A0 - $A1)
store r2 r1                             #main.func2[0].expr ($A0 - $A1)
addi  r3 r0 -1                          #main.func2[0]
load  r3 r3                             #main.func2[0]
load  r2 r1                             #main.func2[0]
store r2 r3                             #main.func2[0]
addi  r1 r1 -1                          #main.func2[0]
addi  r3 r3 -1                          #main.func2[0]
copy  r2 r0                             #main.func2[0]
load  r0 r0                             #main.func2[0]
addi  r2 r2 -1                          #main.func2[0]
load  r1 r2                             #main.func2[0]
addi  r2 r2 -1                          #main.func2[0]
load  pc r2                             #main.func2[0]
addi  r1 r1 1                           #main.func2.forceReturn.expr 0
const r2 0                              #main.func2.forceReturn.expr 0
store r2 r1                             #main.func2.forceReturn.expr 0
addi  r3 r0 -1                          #main.func2.forceReturn
load  r3 r3                             #main.func2.forceReturn
load  r2 r1                             #main.func2.forceReturn
store r2 r3                             #main.func2.forceReturn
addi  r1 r1 -1                          #main.func2.forceReturn
addi  r3 r3 -1                          #main.func2.forceReturn
copy  r2 r0                             #main.func2.forceReturn
load  r0 r0                             #main.func2.forceReturn
addi  r2 r2 -1                          #main.func2.forceReturn
load  r1 r2                             #main.func2.forceReturn
addi  r2 r2 -1                          #main.func2.forceReturn
load  pc r2                             #main.func2.forceReturn
nop                                     #main