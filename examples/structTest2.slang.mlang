
nop                                     #main
const r1 1                              #main
const r2 86                             #main
store r2 r1                             #main
addi  r1 r1 1                           #main
const r2 0                              #main
store r2 r1                             #main
const r2 0                              #main
addi  r1 r1 1                           #main
store r2 r1                             #main
copy  r0 r1                             #main
const pc 12                             #main
const r2 4989                           #main
lt    r2 r1 r2                          #main
addi  r3 pc 6                           #main
ijmp  r3 r2                             #main
const r2 0                              #main
const r3 -1000000000                    #main
store r3 r2                             #main
const r3 86                             #main
jump  r3                                #main
addi  r1 r1 1                           #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 100
const r2 100                            #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 100
store r2 r1                             #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 100
addi  r1 r1 1                           #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 200
const r2 200                            #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 200
store r2 r1                             #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 200
addi  r1 r1 1                           #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 300
const r2 300                            #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 300
store r2 r1                             #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 300
addi  r1 r1 1                           #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 1000
const r2 1000                           #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 1000
store r2 r1                             #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 1000
addi  r1 r1 1                           #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 2000
const r2 2000                           #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 2000
store r2 r1                             #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 2000
addi  r1 r1 1                           #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 3000
const r2 3000                           #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 3000
store r2 r1                             #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 3000
addi  r1 r1 1                           #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 10000
const r2 10000                          #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 10000
store r2 r1                             #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 10000
addi  r1 r1 1                           #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 20000
const r2 20000                          #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 20000
store r2 r1                             #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 20000
addi  r1 r1 1                           #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 30000
const r2 30000                          #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 30000
store r2 r1                             #main[0].expr ((100, 200, 300), (1000, 2000, 3000), (10000, 20000, 30000)).expr 30000
addi  r2 r0 0                           #main[1].expr $0.1.1
addi  r2 r2 4                           #main[1].expr $0.1.1
addi  r1 r1 1                           #main[1].expr $0.1.1
addi  r2 r2 1                           #main[1].expr $0.1.1
load  r3 r2                             #main[1].expr $0.1.1
store r3 r1                             #main[1].expr $0.1.1
addi  r1 r1 1                           #main[2].expr $9
addi  r2 r0 10                          #main[2].expr $9
load  r2 r2                             #main[2].expr $9
store r2 r1                             #main[2].expr $9
addi  r3 r0 -1                          #main[2]
load  r3 r3                             #main[2]
load  r2 r1                             #main[2]
store r2 r3                             #main[2]
addi  r1 r1 -1                          #main[2]
addi  r3 r3 -1                          #main[2]
copy  r2 r0                             #main[2]
load  r0 r0                             #main[2]
addi  r2 r2 -1                          #main[2]
load  r1 r2                             #main[2]
addi  r2 r2 -1                          #main[2]
load  pc r2                             #main[2]
addi  r1 r1 -10                         #main
addi  r1 r1 1                           #main.forceReturn.expr 0
const r2 0                              #main.forceReturn.expr 0
store r2 r1                             #main.forceReturn.expr 0
addi  r3 r0 -1                          #main.forceReturn
load  r3 r3                             #main.forceReturn
load  r2 r1                             #main.forceReturn
store r2 r3                             #main.forceReturn
addi  r1 r1 -1                          #main.forceReturn
addi  r3 r3 -1                          #main.forceReturn
copy  r2 r0                             #main.forceReturn
load  r0 r0                             #main.forceReturn
addi  r2 r2 -1                          #main.forceReturn
load  r1 r2                             #main.forceReturn
addi  r2 r2 -1                          #main.forceReturn
load  pc r2                             #main.forceReturn
nop                                     #main