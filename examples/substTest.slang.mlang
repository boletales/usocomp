
nop                                     #main
const r2 1                              #main
const r1 1                              #main
const r3 115                            #main
store r3 r1                             #main
add   r1 r1 r2                          #main
const r3 0                              #main
store r3 r1                             #main
const r3 0                              #main
add   r1 r1 r2                          #main
store r3 r1                             #main
copy  r0 r1                             #main
const pc 13                             #main
const r2 1                              #main[0].expr 100
add   r1 r1 r2                          #main[0].expr 100
const r3 100                            #main[0].expr 100
store r3 r1                             #main[0].expr 100
const r2 1                              #main[1].expr 200
add   r1 r1 r2                          #main[1].expr 200
const r3 200                            #main[1].expr 200
store r3 r1                             #main[1].expr 200
const r2 1                              #main[2].expr 300
add   r1 r1 r2                          #main[2].expr 300
const r3 300                            #main[2].expr 300
store r3 r1                             #main[2].expr 300
const r2 1                              #main[3].expr 400
add   r1 r1 r2                          #main[3].expr 400
const r3 400                            #main[3].expr 400
store r3 r1                             #main[3].expr 400
const r2 1                              #main[4].expr 10000
add   r1 r1 r2                          #main[4].expr 10000
const r3 10000                          #main[4].expr 10000
store r3 r1                             #main[4].expr 10000
load  r3 r1                             #main[4]
const r2 -1                             #main[4]
add   r1 r1 r2                          #main[4]
const r2 3                              #main[4]
add   r2 r2 r0                          #main[4]
store r3 r2                             #main[4]
const r2 1                              #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2).expr ($0 + $1).expr $0
add   r1 r1 r2                          #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2).expr ($0 + $1).expr $0
const r2 1                              #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2).expr ($0 + $1).expr $0
add   r2 r2 r0                          #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2).expr ($0 + $1).expr $0
load  r2 r2                             #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2).expr ($0 + $1).expr $0
store r2 r1                             #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2).expr ($0 + $1).expr $0
const r2 1                              #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2).expr ($0 + $1).expr $1
add   r1 r1 r2                          #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2).expr ($0 + $1).expr $1
const r2 2                              #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2).expr ($0 + $1).expr $1
add   r2 r2 r0                          #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2).expr ($0 + $1).expr $1
load  r2 r2                             #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2).expr ($0 + $1).expr $1
store r2 r1                             #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2).expr ($0 + $1).expr $1
const r2 -1                             #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2).expr ($0 + $1)
load  r4 r1                             #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2).expr ($0 + $1)
add   r1 r1 r2                          #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2).expr ($0 + $1)
load  r3 r1                             #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2).expr ($0 + $1)
add   r3 r3 r4                          #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2).expr ($0 + $1)
store r3 r1                             #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2).expr ($0 + $1)
const r2 1                              #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2).expr $2
add   r1 r1 r2                          #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2).expr $2
const r2 3                              #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2).expr $2
add   r2 r2 r0                          #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2).expr $2
load  r2 r2                             #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2).expr $2
store r2 r1                             #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2).expr $2
const r2 -1                             #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2)
load  r4 r1                             #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2)
add   r1 r1 r2                          #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2)
load  r3 r1                             #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2)
add   r3 r3 r4                          #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2)
store r3 r1                             #main[5].expr ((($0 + $1) + $2) + $3).expr (($0 + $1) + $2)
const r2 1                              #main[5].expr ((($0 + $1) + $2) + $3).expr $3
add   r1 r1 r2                          #main[5].expr ((($0 + $1) + $2) + $3).expr $3
const r2 4                              #main[5].expr ((($0 + $1) + $2) + $3).expr $3
add   r2 r2 r0                          #main[5].expr ((($0 + $1) + $2) + $3).expr $3
load  r2 r2                             #main[5].expr ((($0 + $1) + $2) + $3).expr $3
store r2 r1                             #main[5].expr ((($0 + $1) + $2) + $3).expr $3
const r2 -1                             #main[5].expr ((($0 + $1) + $2) + $3)
load  r4 r1                             #main[5].expr ((($0 + $1) + $2) + $3)
add   r1 r1 r2                          #main[5].expr ((($0 + $1) + $2) + $3)
load  r3 r1                             #main[5].expr ((($0 + $1) + $2) + $3)
add   r3 r3 r4                          #main[5].expr ((($0 + $1) + $2) + $3)
store r3 r1                             #main[5].expr ((($0 + $1) + $2) + $3)
const r2 -1                             #main[5]
add   r4 r2 r0                          #main[5]
load  r4 r4                             #main[5]
load  r3 r1                             #main[5]
store r3 r4                             #main[5]
add   r1 r1 r2                          #main[5]
add   r4 r4 r2                          #main[5]
copy  r2 r0                             #main[5]
load  r0 r0                             #main[5]
const r3 -1                             #main[5]
add   r2 r2 r3                          #main[5]
load  r1 r2                             #main[5]
add   r2 r2 r3                          #main[5]
load  pc r2                             #main[5]
const r2 -4                             #main
add   r1 r1 r2                          #main
const r2 1                              #main.forceReturn.expr 0
add   r1 r1 r2                          #main.forceReturn.expr 0
const r3 0                              #main.forceReturn.expr 0
store r3 r1                             #main.forceReturn.expr 0
const r2 -1                             #main.forceReturn
add   r4 r2 r0                          #main.forceReturn
load  r4 r4                             #main.forceReturn
load  r3 r1                             #main.forceReturn
store r3 r4                             #main.forceReturn
add   r1 r1 r2                          #main.forceReturn
add   r4 r4 r2                          #main.forceReturn
copy  r2 r0                             #main.forceReturn
load  r0 r0                             #main.forceReturn
const r3 -1                             #main.forceReturn
add   r2 r2 r3                          #main.forceReturn
load  r1 r2                             #main.forceReturn
add   r2 r2 r3                          #main.forceReturn
load  pc r2                             #main.forceReturn
nop                                     #main