
nop                                     #main
const r1 1                              #main
const r2 99                             #main
store r2 r1                             #main
addi  r1 r1 1                           #main
const r2 0                              #main
store r2 r1                             #main
const r2 0                              #main
addi  r1 r1 1                           #main
store r2 r1                             #main
copy  r0 r1                             #main
const pc 12                             #main
const r2 4992                           #main
lt    r2 r1 r2                          #main
addi  r3 pc 6                           #main
jnz   r3 r2                             #main
const r2 0                              #main
const r3 -1000000000                    #main
store r3 r2                             #main
const r3 99                             #main
jump  r3                                #main
addi  r1 r1 1                           #main[0].expr 100
const r2 100                            #main[0].expr 100
store r2 r1                             #main[0].expr 100
addi  r1 r1 1                           #main[1].expr 200
const r2 200                            #main[1].expr 200
store r2 r1                             #main[1].expr 200
addi  r1 r1 1                           #main[2].expr 300
const r2 300                            #main[2].expr 300
store r2 r1                             #main[2].expr 300
addi  r1 r1 1                           #main[3].expr 400
const r2 400                            #main[3].expr 400
store r2 r1                             #main[3].expr 400
addi  r1 r1 1                           #main[4].expr 10000
const r2 10000                          #main[4].expr 10000
store r2 r1                             #main[4].expr 10000
load  r2 r1                             #main[4]
addi  r1 r1 -1                          #main[4]
addi  r3 r0 3                           #main[4]
store r2 r3                             #main[4]
addi  r1 r1 1                           #main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k).expr ($i + $j).expr $i
addi  r2 r0 1                           #main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k).expr ($i + $j).expr $i
load  r2 r2                             #main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k).expr ($i + $j).expr $i
store r2 r1                             #main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k).expr ($i + $j).expr $i
addi  r1 r1 1                           #main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k).expr ($i + $j).expr $j
addi  r2 r0 2                           #main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k).expr ($i + $j).expr $j
load  r2 r2                             #main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k).expr ($i + $j).expr $j
store r2 r1                             #main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k).expr ($i + $j).expr $j
load  r3 r1                             #main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k).expr ($i + $j)
addi  r1 r1 -1                          #main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k).expr ($i + $j)
load  r2 r1                             #main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k).expr ($i + $j)
add   r2 r2 r3                          #main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k).expr ($i + $j)
store r2 r1                             #main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k).expr ($i + $j)
addi  r1 r1 1                           #main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k).expr $k
addi  r2 r0 3                           #main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k).expr $k
load  r2 r2                             #main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k).expr $k
store r2 r1                             #main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k).expr $k
load  r3 r1                             #main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k)
addi  r1 r1 -1                          #main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k)
load  r2 r1                             #main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k)
add   r2 r2 r3                          #main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k)
store r2 r1                             #main[5].expr ((($i + $j) + $k) + $l).expr (($i + $j) + $k)
addi  r1 r1 1                           #main[5].expr ((($i + $j) + $k) + $l).expr $l
addi  r2 r0 4                           #main[5].expr ((($i + $j) + $k) + $l).expr $l
load  r2 r2                             #main[5].expr ((($i + $j) + $k) + $l).expr $l
store r2 r1                             #main[5].expr ((($i + $j) + $k) + $l).expr $l
load  r3 r1                             #main[5].expr ((($i + $j) + $k) + $l)
addi  r1 r1 -1                          #main[5].expr ((($i + $j) + $k) + $l)
load  r2 r1                             #main[5].expr ((($i + $j) + $k) + $l)
add   r2 r2 r3                          #main[5].expr ((($i + $j) + $k) + $l)
store r2 r1                             #main[5].expr ((($i + $j) + $k) + $l)
addi  r3 r0 -1                          #main[5]
load  r3 r3                             #main[5]
load  r2 r1                             #main[5]
store r2 r3                             #main[5]
addi  r1 r1 -1                          #main[5]
addi  r3 r3 -1                          #main[5]
copy  r2 r0                             #main[5]
load  r0 r0                             #main[5]
addi  r2 r2 -1                          #main[5]
load  r1 r2                             #main[5]
addi  r2 r2 -1                          #main[5]
load  pc r2                             #main[5]
addi  r1 r1 -4                          #main
addi  r1 r1 1                           #main.forceReturn.expr 0
const r2 0                              #main.forceReturn.expr 0
store r2 r1                             #main.forceReturn.expr 0
addi  r3 r0 -1                          #main.forceReturn
load  r3 r3                             #main.forceReturn
load  r2 r1                             #main.forceReturn
store r2 r3                             #main.forceReturn
addi  r1 r1 -1                          #main.forceReturn
addi  r3 r3 -1                          #main.forceReturn
copy  r2 r0                             #main.forceReturn
load  r0 r0                             #main.forceReturn
addi  r2 r2 -1                          #main.forceReturn
load  r1 r2                             #main.forceReturn
addi  r2 r2 -1                          #main.forceReturn
load  pc r2                             #main.forceReturn
nop                                     #main