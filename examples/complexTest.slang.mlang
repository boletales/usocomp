
nop                                     #main
const r2 1                              #main
const r1 1                              #main
const r3 302                            #main
store r3 r1                             #main
add   r1 r1 r2                          #main
const r3 0                              #main
store r3 r1                             #main
const r3 0                              #main
add   r1 r1 r2                          #main
store r3 r1                             #main
copy  r0 r1                             #main
const pc 13                             #main
const r2 1                              #main[0].expr (100, 200).expr 100
add   r1 r1 r2                          #main[0].expr (100, 200).expr 100
const r3 100                            #main[0].expr (100, 200).expr 100
store r3 r1                             #main[0].expr (100, 200).expr 100
const r2 1                              #main[0].expr (100, 200).expr 200
add   r1 r1 r2                          #main[0].expr (100, 200).expr 200
const r3 200                            #main[0].expr (100, 200).expr 200
store r3 r1                             #main[0].expr (100, 200).expr 200
const r2 1                              #main[1].expr (300, 400).expr 300
add   r1 r1 r2                          #main[1].expr (300, 400).expr 300
const r3 300                            #main[1].expr (300, 400).expr 300
store r3 r1                             #main[1].expr (300, 400).expr 300
const r2 1                              #main[1].expr (300, 400).expr 400
add   r1 r1 r2                          #main[1].expr (300, 400).expr 400
const r3 400                            #main[1].expr (300, 400).expr 400
store r3 r1                             #main[1].expr (300, 400).expr 400
const r2 1                              #main[2].expr 1111111
add   r1 r1 r2                          #main[2].expr 1111111
const r3 1111111                        #main[2].expr 1111111
store r3 r1                             #main[2].expr 1111111
const r2 2                              #main[3].expr main.complexProd($0, $2)
add   r1 r1 r2                          #main[3].expr main.complexProd($0, $2)
const r2 1                              #main[3].expr main.complexProd($0, $2).expr ($0, $2).expr $0
add   r1 r1 r2                          #main[3].expr main.complexProd($0, $2).expr ($0, $2).expr $0
const r2 1                              #main[3].expr main.complexProd($0, $2).expr ($0, $2).expr $0
add   r2 r2 r0                          #main[3].expr main.complexProd($0, $2).expr ($0, $2).expr $0
load  r2 r2                             #main[3].expr main.complexProd($0, $2).expr ($0, $2).expr $0
store r2 r1                             #main[3].expr main.complexProd($0, $2).expr ($0, $2).expr $0
const r2 1                              #main[3].expr main.complexProd($0, $2).expr ($0, $2).expr $0
add   r1 r1 r2                          #main[3].expr main.complexProd($0, $2).expr ($0, $2).expr $0
const r2 2                              #main[3].expr main.complexProd($0, $2).expr ($0, $2).expr $0
add   r2 r2 r0                          #main[3].expr main.complexProd($0, $2).expr ($0, $2).expr $0
load  r2 r2                             #main[3].expr main.complexProd($0, $2).expr ($0, $2).expr $0
store r2 r1                             #main[3].expr main.complexProd($0, $2).expr ($0, $2).expr $0
const r2 1                              #main[3].expr main.complexProd($0, $2).expr ($0, $2).expr $2
add   r1 r1 r2                          #main[3].expr main.complexProd($0, $2).expr ($0, $2).expr $2
const r2 3                              #main[3].expr main.complexProd($0, $2).expr ($0, $2).expr $2
add   r2 r2 r0                          #main[3].expr main.complexProd($0, $2).expr ($0, $2).expr $2
load  r2 r2                             #main[3].expr main.complexProd($0, $2).expr ($0, $2).expr $2
store r2 r1                             #main[3].expr main.complexProd($0, $2).expr ($0, $2).expr $2
const r2 1                              #main[3].expr main.complexProd($0, $2).expr ($0, $2).expr $2
add   r1 r1 r2                          #main[3].expr main.complexProd($0, $2).expr ($0, $2).expr $2
const r2 4                              #main[3].expr main.complexProd($0, $2).expr ($0, $2).expr $2
add   r2 r2 r0                          #main[3].expr main.complexProd($0, $2).expr ($0, $2).expr $2
load  r2 r2                             #main[3].expr main.complexProd($0, $2).expr ($0, $2).expr $2
store r2 r1                             #main[3].expr main.complexProd($0, $2).expr ($0, $2).expr $2
const r4 120                            #main[3].expr main.complexProd($0, $2)
const r2 1                              #main[3].expr main.complexProd($0, $2)
add   r1 r1 r2                          #main[3].expr main.complexProd($0, $2)
const r3 9                              #main[3].expr main.complexProd($0, $2)
add   r3 r3 pc                          #main[3].expr main.complexProd($0, $2)
store r3 r1                             #main[3].expr main.complexProd($0, $2)
add   r1 r1 r2                          #main[3].expr main.complexProd($0, $2)
const r3 -6                             #main[3].expr main.complexProd($0, $2)
add   r3 r1 r3                          #main[3].expr main.complexProd($0, $2)
store r3 r1                             #main[3].expr main.complexProd($0, $2)
add   r1 r1 r2                          #main[3].expr main.complexProd($0, $2)
store r0 r1                             #main[3].expr main.complexProd($0, $2)
copy  r0 r1                             #main[3].expr main.complexProd($0, $2)
copy  pc r4                             #main[3].expr main.complexProd($0, $2)
const r2 1                              #main[4].expr 2222222
add   r1 r1 r2                          #main[4].expr 2222222
const r3 2222222                        #main[4].expr 2222222
store r3 r1                             #main[4].expr 2222222
const r3 5                              #main[5].expr $5.1
add   r3 r3 r0                          #main[5].expr $5.1
const r2 1                              #main[5].expr $5.1
add   r3 r3 r2                          #main[5].expr $5.1
const r2 1                              #main[5].expr $5.1
add   r1 r1 r2                          #main[5].expr $5.1
add   r3 r3 r2                          #main[5].expr $5.1
load  r4 r3                             #main[5].expr $5.1
store r4 r1                             #main[5].expr $5.1
const r2 -1                             #main[5]
add   r4 r2 r0                          #main[5]
load  r4 r4                             #main[5]
load  r3 r1                             #main[5]
store r3 r4                             #main[5]
add   r1 r1 r2                          #main[5]
add   r4 r4 r2                          #main[5]
copy  r2 r0                             #main[5]
load  r0 r0                             #main[5]
const r3 -1                             #main[5]
add   r2 r2 r3                          #main[5]
load  r1 r2                             #main[5]
add   r2 r2 r3                          #main[5]
load  pc r2                             #main[5]
const r2 -8                             #main
add   r1 r1 r2                          #main
const r2 1                              #main.forceReturn.expr 0
add   r1 r1 r2                          #main.forceReturn.expr 0
const r3 0                              #main.forceReturn.expr 0
store r3 r1                             #main.forceReturn.expr 0
const r2 -1                             #main.forceReturn
add   r4 r2 r0                          #main.forceReturn
load  r4 r4                             #main.forceReturn
load  r3 r1                             #main.forceReturn
store r3 r4                             #main.forceReturn
add   r1 r1 r2                          #main.forceReturn
add   r4 r4 r2                          #main.forceReturn
copy  r2 r0                             #main.forceReturn
load  r0 r0                             #main.forceReturn
const r3 -1                             #main.forceReturn
add   r2 r2 r3                          #main.forceReturn
load  r1 r2                             #main.forceReturn
add   r2 r2 r3                          #main.forceReturn
load  pc r2                             #main.forceReturn
const r2 -1                             #main.complexProd[0].expr $A0.0
add   r2 r2 r0                          #main.complexProd[0].expr $A0.0
load  r2 r2                             #main.complexProd[0].expr $A0.0
const r3 0                              #main.complexProd[0].expr $A0.0
add   r3 r2 r3                          #main.complexProd[0].expr $A0.0
const r2 0                              #main.complexProd[0].expr $A0.0
add   r3 r3 r2                          #main.complexProd[0].expr $A0.0
const r2 1                              #main.complexProd[0].expr $A0.0
add   r1 r1 r2                          #main.complexProd[0].expr $A0.0
add   r3 r3 r2                          #main.complexProd[0].expr $A0.0
load  r4 r3                             #main.complexProd[0].expr $A0.0
store r4 r1                             #main.complexProd[0].expr $A0.0
const r2 -1                             #main.complexProd[1].expr $A0.1
add   r2 r2 r0                          #main.complexProd[1].expr $A0.1
load  r2 r2                             #main.complexProd[1].expr $A0.1
const r3 0                              #main.complexProd[1].expr $A0.1
add   r3 r2 r3                          #main.complexProd[1].expr $A0.1
const r2 1                              #main.complexProd[1].expr $A0.1
add   r3 r3 r2                          #main.complexProd[1].expr $A0.1
const r2 1                              #main.complexProd[1].expr $A0.1
add   r1 r1 r2                          #main.complexProd[1].expr $A0.1
add   r3 r3 r2                          #main.complexProd[1].expr $A0.1
load  r4 r3                             #main.complexProd[1].expr $A0.1
store r4 r1                             #main.complexProd[1].expr $A0.1
const r2 -1                             #main.complexProd[2].expr $A1.0
add   r2 r2 r0                          #main.complexProd[2].expr $A1.0
load  r2 r2                             #main.complexProd[2].expr $A1.0
const r3 2                              #main.complexProd[2].expr $A1.0
add   r3 r2 r3                          #main.complexProd[2].expr $A1.0
const r2 0                              #main.complexProd[2].expr $A1.0
add   r3 r3 r2                          #main.complexProd[2].expr $A1.0
const r2 1                              #main.complexProd[2].expr $A1.0
add   r1 r1 r2                          #main.complexProd[2].expr $A1.0
add   r3 r3 r2                          #main.complexProd[2].expr $A1.0
load  r4 r3                             #main.complexProd[2].expr $A1.0
store r4 r1                             #main.complexProd[2].expr $A1.0
const r2 -1                             #main.complexProd[3].expr $A1.1
add   r2 r2 r0                          #main.complexProd[3].expr $A1.1
load  r2 r2                             #main.complexProd[3].expr $A1.1
const r3 2                              #main.complexProd[3].expr $A1.1
add   r3 r2 r3                          #main.complexProd[3].expr $A1.1
const r2 1                              #main.complexProd[3].expr $A1.1
add   r3 r3 r2                          #main.complexProd[3].expr $A1.1
const r2 1                              #main.complexProd[3].expr $A1.1
add   r1 r1 r2                          #main.complexProd[3].expr $A1.1
add   r3 r3 r2                          #main.complexProd[3].expr $A1.1
load  r4 r3                             #main.complexProd[3].expr $A1.1
store r4 r1                             #main.complexProd[3].expr $A1.1
const r2 1                              #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($0 * $2).expr $0
add   r1 r1 r2                          #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($0 * $2).expr $0
const r2 1                              #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($0 * $2).expr $0
add   r2 r2 r0                          #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($0 * $2).expr $0
load  r2 r2                             #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($0 * $2).expr $0
store r2 r1                             #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($0 * $2).expr $0
const r2 1                              #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($0 * $2).expr $2
add   r1 r1 r2                          #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($0 * $2).expr $2
const r2 3                              #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($0 * $2).expr $2
add   r2 r2 r0                          #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($0 * $2).expr $2
load  r2 r2                             #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($0 * $2).expr $2
store r2 r1                             #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($0 * $2).expr $2
const r2 -1                             #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($0 * $2)
load  r4 r1                             #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($0 * $2)
add   r1 r1 r2                          #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($0 * $2)
load  r3 r1                             #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($0 * $2)
mult  r3 r3 r4                          #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($0 * $2)
store r3 r1                             #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($0 * $2)
const r2 1                              #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($1 * $3).expr $1
add   r1 r1 r2                          #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($1 * $3).expr $1
const r2 2                              #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($1 * $3).expr $1
add   r2 r2 r0                          #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($1 * $3).expr $1
load  r2 r2                             #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($1 * $3).expr $1
store r2 r1                             #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($1 * $3).expr $1
const r2 1                              #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($1 * $3).expr $3
add   r1 r1 r2                          #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($1 * $3).expr $3
const r2 4                              #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($1 * $3).expr $3
add   r2 r2 r0                          #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($1 * $3).expr $3
load  r2 r2                             #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($1 * $3).expr $3
store r2 r1                             #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($1 * $3).expr $3
const r2 -1                             #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($1 * $3)
load  r4 r1                             #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($1 * $3)
add   r1 r1 r2                          #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($1 * $3)
load  r3 r1                             #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($1 * $3)
mult  r3 r3 r4                          #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($1 * $3)
store r3 r1                             #main.complexProd[4].expr (($0 * $2) - ($1 * $3)).expr ($1 * $3)
const r2 -1                             #main.complexProd[4].expr (($0 * $2) - ($1 * $3))
load  r4 r1                             #main.complexProd[4].expr (($0 * $2) - ($1 * $3))
add   r1 r1 r2                          #main.complexProd[4].expr (($0 * $2) - ($1 * $3))
load  r3 r1                             #main.complexProd[4].expr (($0 * $2) - ($1 * $3))
sub   r3 r3 r4                          #main.complexProd[4].expr (($0 * $2) - ($1 * $3))
store r3 r1                             #main.complexProd[4].expr (($0 * $2) - ($1 * $3))
const r2 1                              #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($0 * $3).expr $0
add   r1 r1 r2                          #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($0 * $3).expr $0
const r2 1                              #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($0 * $3).expr $0
add   r2 r2 r0                          #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($0 * $3).expr $0
load  r2 r2                             #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($0 * $3).expr $0
store r2 r1                             #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($0 * $3).expr $0
const r2 1                              #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($0 * $3).expr $3
add   r1 r1 r2                          #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($0 * $3).expr $3
const r2 4                              #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($0 * $3).expr $3
add   r2 r2 r0                          #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($0 * $3).expr $3
load  r2 r2                             #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($0 * $3).expr $3
store r2 r1                             #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($0 * $3).expr $3
const r2 -1                             #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($0 * $3)
load  r4 r1                             #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($0 * $3)
add   r1 r1 r2                          #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($0 * $3)
load  r3 r1                             #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($0 * $3)
mult  r3 r3 r4                          #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($0 * $3)
store r3 r1                             #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($0 * $3)
const r2 1                              #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($1 * $2).expr $1
add   r1 r1 r2                          #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($1 * $2).expr $1
const r2 2                              #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($1 * $2).expr $1
add   r2 r2 r0                          #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($1 * $2).expr $1
load  r2 r2                             #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($1 * $2).expr $1
store r2 r1                             #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($1 * $2).expr $1
const r2 1                              #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($1 * $2).expr $2
add   r1 r1 r2                          #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($1 * $2).expr $2
const r2 3                              #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($1 * $2).expr $2
add   r2 r2 r0                          #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($1 * $2).expr $2
load  r2 r2                             #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($1 * $2).expr $2
store r2 r1                             #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($1 * $2).expr $2
const r2 -1                             #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($1 * $2)
load  r4 r1                             #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($1 * $2)
add   r1 r1 r2                          #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($1 * $2)
load  r3 r1                             #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($1 * $2)
mult  r3 r3 r4                          #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($1 * $2)
store r3 r1                             #main.complexProd[5].expr (($0 * $3) + ($1 * $2)).expr ($1 * $2)
const r2 -1                             #main.complexProd[5].expr (($0 * $3) + ($1 * $2))
load  r4 r1                             #main.complexProd[5].expr (($0 * $3) + ($1 * $2))
add   r1 r1 r2                          #main.complexProd[5].expr (($0 * $3) + ($1 * $2))
load  r3 r1                             #main.complexProd[5].expr (($0 * $3) + ($1 * $2))
add   r3 r3 r4                          #main.complexProd[5].expr (($0 * $3) + ($1 * $2))
store r3 r1                             #main.complexProd[5].expr (($0 * $3) + ($1 * $2))
const r2 1                              #main.complexProd[6].expr ($4, $5).expr $4
add   r1 r1 r2                          #main.complexProd[6].expr ($4, $5).expr $4
const r2 5                              #main.complexProd[6].expr ($4, $5).expr $4
add   r2 r2 r0                          #main.complexProd[6].expr ($4, $5).expr $4
load  r2 r2                             #main.complexProd[6].expr ($4, $5).expr $4
store r2 r1                             #main.complexProd[6].expr ($4, $5).expr $4
const r2 1                              #main.complexProd[6].expr ($4, $5).expr $5
add   r1 r1 r2                          #main.complexProd[6].expr ($4, $5).expr $5
const r2 6                              #main.complexProd[6].expr ($4, $5).expr $5
add   r2 r2 r0                          #main.complexProd[6].expr ($4, $5).expr $5
load  r2 r2                             #main.complexProd[6].expr ($4, $5).expr $5
store r2 r1                             #main.complexProd[6].expr ($4, $5).expr $5
const r2 -1                             #main.complexProd[6]
add   r4 r2 r0                          #main.complexProd[6]
load  r4 r4                             #main.complexProd[6]
load  r3 r1                             #main.complexProd[6]
store r3 r4                             #main.complexProd[6]
add   r1 r1 r2                          #main.complexProd[6]
add   r4 r4 r2                          #main.complexProd[6]
load  r3 r1                             #main.complexProd[6]
store r3 r4                             #main.complexProd[6]
add   r1 r1 r2                          #main.complexProd[6]
add   r4 r4 r2                          #main.complexProd[6]
copy  r2 r0                             #main.complexProd[6]
load  r0 r0                             #main.complexProd[6]
const r3 -1                             #main.complexProd[6]
add   r2 r2 r3                          #main.complexProd[6]
load  r1 r2                             #main.complexProd[6]
add   r2 r2 r3                          #main.complexProd[6]
load  pc r2                             #main.complexProd[6]
const r2 -6                             #main.complexProd
add   r1 r1 r2                          #main.complexProd
const r2 1                              #main.complexProd.forceReturn.expr 0
add   r1 r1 r2                          #main.complexProd.forceReturn.expr 0
const r3 0                              #main.complexProd.forceReturn.expr 0
store r3 r1                             #main.complexProd.forceReturn.expr 0
const r2 -1                             #main.complexProd.forceReturn
add   r4 r2 r0                          #main.complexProd.forceReturn
load  r4 r4                             #main.complexProd.forceReturn
load  r3 r1                             #main.complexProd.forceReturn
store r3 r4                             #main.complexProd.forceReturn
add   r1 r1 r2                          #main.complexProd.forceReturn
add   r4 r4 r2                          #main.complexProd.forceReturn
copy  r2 r0                             #main.complexProd.forceReturn
load  r0 r0                             #main.complexProd.forceReturn
const r3 -1                             #main.complexProd.forceReturn
add   r2 r2 r3                          #main.complexProd.forceReturn
load  r1 r2                             #main.complexProd.forceReturn
add   r2 r2 r3                          #main.complexProd.forceReturn
load  pc r2                             #main.complexProd.forceReturn
nop                                     #main