
nop                                     #main
const r1 1                              #main
const r2 202                            #main
store r2 r1                             #main
addi  r1 r1 1                           #main
const r2 0                              #main
store r2 r1                             #main
const r2 0                              #main
addi  r1 r1 1                           #main
store r2 r1                             #main
copy  r0 r1                             #main
const pc 12                             #main
const r2 4992                           #main
lt    r2 r1 r2                          #main
addi  r3 pc 6                           #main
jnz   r3 r2                             #main
const r2 0                              #main
const r3 -1000000000                    #main
store r3 r2                             #main
const r3 202                            #main
jump  r3                                #main
addi  r1 r1 1                           #main[0].expr 100
const r2 100                            #main[0].expr 100
store r2 r1                             #main[0].expr 100
addi  r1 r1 1                           #main[1].expr 200
const r2 200                            #main[1].expr 200
store r2 r1                             #main[1].expr 200
addi  r1 r1 1                           #main[2].expr 1000
const r2 1000                           #main[2].expr 1000
store r2 r1                             #main[2].expr 1000
addi  r1 r1 1                           #main[3].expr 2000
const r2 2000                           #main[3].expr 2000
store r2 r1                             #main[3].expr 2000
addi  r1 r1 1                           #main[4].expr 3000
const r2 3000                           #main[4].expr 3000
store r2 r1                             #main[4].expr 3000
addi  r1 r1 1                           #main[5].expr 4000
const r2 4000                           #main[5].expr 4000
store r2 r1                             #main[5].expr 4000
addi  r1 r1 1                           #main[6].ifCond_0.expr ($i > $j).expr $i
addi  r2 r0 1                           #main[6].ifCond_0.expr ($i > $j).expr $i
load  r2 r2                             #main[6].ifCond_0.expr ($i > $j).expr $i
store r2 r1                             #main[6].ifCond_0.expr ($i > $j).expr $i
addi  r1 r1 1                           #main[6].ifCond_0.expr ($i > $j).expr $j
addi  r2 r0 2                           #main[6].ifCond_0.expr ($i > $j).expr $j
load  r2 r2                             #main[6].ifCond_0.expr ($i > $j).expr $j
store r2 r1                             #main[6].ifCond_0.expr ($i > $j).expr $j
load  r3 r1                             #main[6].ifCond_0.expr ($i > $j)
addi  r1 r1 -1                          #main[6].ifCond_0.expr ($i > $j)
load  r2 r1                             #main[6].ifCond_0.expr ($i > $j)
gt    r2 r2 r3                          #main[6].ifCond_0.expr ($i > $j)
store r2 r1                             #main[6].ifCond_0.expr ($i > $j)
load  r3 r1                             #main[6].ifCond_0
addi  r1 r1 -1                          #main[6].ifCond_0
addi  r2 pc 10                          #main[6].ifCond_0
jz    r2 r3                             #main[6].ifCond_0
addi  r1 r1 1                           #main[6].ifBody_0[0].expr 10000
const r2 10000                          #main[6].ifBody_0[0].expr 10000
store r2 r1                             #main[6].ifBody_0[0].expr 10000
load  r2 r1                             #main[6].ifBody_0[0]
addi  r1 r1 -1                          #main[6].ifBody_0[0]
addi  r3 r0 3                           #main[6].ifBody_0[0]
store r2 r3                             #main[6].ifBody_0[0]
addi  r2 pc 8                           #main[6].ifBody_0
jump  r2                                #main[6].ifBody_0
addi  r1 r1 1                           #main[6].ifElseBody[0].expr 20000
const r2 20000                          #main[6].ifElseBody[0].expr 20000
store r2 r1                             #main[6].ifElseBody[0].expr 20000
load  r2 r1                             #main[6].ifElseBody[0]
addi  r1 r1 -1                          #main[6].ifElseBody[0]
addi  r3 r0 3                           #main[6].ifElseBody[0]
store r2 r3                             #main[6].ifElseBody[0]
addi  r1 r1 1                           #main[7].ifCond_0.expr ($i < $j).expr $i
addi  r2 r0 1                           #main[7].ifCond_0.expr ($i < $j).expr $i
load  r2 r2                             #main[7].ifCond_0.expr ($i < $j).expr $i
store r2 r1                             #main[7].ifCond_0.expr ($i < $j).expr $i
addi  r1 r1 1                           #main[7].ifCond_0.expr ($i < $j).expr $j
addi  r2 r0 2                           #main[7].ifCond_0.expr ($i < $j).expr $j
load  r2 r2                             #main[7].ifCond_0.expr ($i < $j).expr $j
store r2 r1                             #main[7].ifCond_0.expr ($i < $j).expr $j
load  r3 r1                             #main[7].ifCond_0.expr ($i < $j)
addi  r1 r1 -1                          #main[7].ifCond_0.expr ($i < $j)
load  r2 r1                             #main[7].ifCond_0.expr ($i < $j)
lt    r2 r2 r3                          #main[7].ifCond_0.expr ($i < $j)
store r2 r1                             #main[7].ifCond_0.expr ($i < $j)
load  r3 r1                             #main[7].ifCond_0
addi  r1 r1 -1                          #main[7].ifCond_0
addi  r2 pc 10                          #main[7].ifCond_0
jz    r2 r3                             #main[7].ifCond_0
addi  r1 r1 1                           #main[7].ifBody_0[0].expr 10000
const r2 10000                          #main[7].ifBody_0[0].expr 10000
store r2 r1                             #main[7].ifBody_0[0].expr 10000
load  r2 r1                             #main[7].ifBody_0[0]
addi  r1 r1 -1                          #main[7].ifBody_0[0]
addi  r3 r0 4                           #main[7].ifBody_0[0]
store r2 r3                             #main[7].ifBody_0[0]
addi  r2 pc 8                           #main[7].ifBody_0
jump  r2                                #main[7].ifBody_0
addi  r1 r1 1                           #main[7].ifElseBody[0].expr 20000
const r2 20000                          #main[7].ifElseBody[0].expr 20000
store r2 r1                             #main[7].ifElseBody[0].expr 20000
load  r2 r1                             #main[7].ifElseBody[0]
addi  r1 r1 -1                          #main[7].ifElseBody[0]
addi  r3 r0 4                           #main[7].ifElseBody[0]
store r2 r3                             #main[7].ifElseBody[0]
addi  r1 r1 1                           #main[8].ifCond_0.expr ($j > $i).expr $j
addi  r2 r0 2                           #main[8].ifCond_0.expr ($j > $i).expr $j
load  r2 r2                             #main[8].ifCond_0.expr ($j > $i).expr $j
store r2 r1                             #main[8].ifCond_0.expr ($j > $i).expr $j
addi  r1 r1 1                           #main[8].ifCond_0.expr ($j > $i).expr $i
addi  r2 r0 1                           #main[8].ifCond_0.expr ($j > $i).expr $i
load  r2 r2                             #main[8].ifCond_0.expr ($j > $i).expr $i
store r2 r1                             #main[8].ifCond_0.expr ($j > $i).expr $i
load  r3 r1                             #main[8].ifCond_0.expr ($j > $i)
addi  r1 r1 -1                          #main[8].ifCond_0.expr ($j > $i)
load  r2 r1                             #main[8].ifCond_0.expr ($j > $i)
gt    r2 r2 r3                          #main[8].ifCond_0.expr ($j > $i)
store r2 r1                             #main[8].ifCond_0.expr ($j > $i)
load  r3 r1                             #main[8].ifCond_0
addi  r1 r1 -1                          #main[8].ifCond_0
addi  r2 pc 10                          #main[8].ifCond_0
jz    r2 r3                             #main[8].ifCond_0
addi  r1 r1 1                           #main[8].ifBody_0[0].expr 10000
const r2 10000                          #main[8].ifBody_0[0].expr 10000
store r2 r1                             #main[8].ifBody_0[0].expr 10000
load  r2 r1                             #main[8].ifBody_0[0]
addi  r1 r1 -1                          #main[8].ifBody_0[0]
addi  r3 r0 5                           #main[8].ifBody_0[0]
store r2 r3                             #main[8].ifBody_0[0]
addi  r2 pc 8                           #main[8].ifBody_0
jump  r2                                #main[8].ifBody_0
addi  r1 r1 1                           #main[8].ifElseBody[0].expr 20000
const r2 20000                          #main[8].ifElseBody[0].expr 20000
store r2 r1                             #main[8].ifElseBody[0].expr 20000
load  r2 r1                             #main[8].ifElseBody[0]
addi  r1 r1 -1                          #main[8].ifElseBody[0]
addi  r3 r0 5                           #main[8].ifElseBody[0]
store r2 r3                             #main[8].ifElseBody[0]
addi  r1 r1 1                           #main[9].ifCond_0.expr ($j < $i).expr $j
addi  r2 r0 2                           #main[9].ifCond_0.expr ($j < $i).expr $j
load  r2 r2                             #main[9].ifCond_0.expr ($j < $i).expr $j
store r2 r1                             #main[9].ifCond_0.expr ($j < $i).expr $j
addi  r1 r1 1                           #main[9].ifCond_0.expr ($j < $i).expr $i
addi  r2 r0 1                           #main[9].ifCond_0.expr ($j < $i).expr $i
load  r2 r2                             #main[9].ifCond_0.expr ($j < $i).expr $i
store r2 r1                             #main[9].ifCond_0.expr ($j < $i).expr $i
load  r3 r1                             #main[9].ifCond_0.expr ($j < $i)
addi  r1 r1 -1                          #main[9].ifCond_0.expr ($j < $i)
load  r2 r1                             #main[9].ifCond_0.expr ($j < $i)
lt    r2 r2 r3                          #main[9].ifCond_0.expr ($j < $i)
store r2 r1                             #main[9].ifCond_0.expr ($j < $i)
load  r3 r1                             #main[9].ifCond_0
addi  r1 r1 -1                          #main[9].ifCond_0
addi  r2 pc 10                          #main[9].ifCond_0
jz    r2 r3                             #main[9].ifCond_0
addi  r1 r1 1                           #main[9].ifBody_0[0].expr 10000
const r2 10000                          #main[9].ifBody_0[0].expr 10000
store r2 r1                             #main[9].ifBody_0[0].expr 10000
load  r2 r1                             #main[9].ifBody_0[0]
addi  r1 r1 -1                          #main[9].ifBody_0[0]
addi  r3 r0 6                           #main[9].ifBody_0[0]
store r2 r3                             #main[9].ifBody_0[0]
addi  r2 pc 8                           #main[9].ifBody_0
jump  r2                                #main[9].ifBody_0
addi  r1 r1 1                           #main[9].ifElseBody[0].expr 20000
const r2 20000                          #main[9].ifElseBody[0].expr 20000
store r2 r1                             #main[9].ifElseBody[0].expr 20000
load  r2 r1                             #main[9].ifElseBody[0]
addi  r1 r1 -1                          #main[9].ifElseBody[0]
addi  r3 r0 6                           #main[9].ifElseBody[0]
store r2 r3                             #main[9].ifElseBody[0]
addi  r1 r1 1                           #main[10].expr 0
const r2 0                              #main[10].expr 0
store r2 r1                             #main[10].expr 0
addi  r3 r0 -1                          #main[10]
load  r3 r3                             #main[10]
load  r2 r1                             #main[10]
store r2 r3                             #main[10]
addi  r1 r1 -1                          #main[10]
addi  r3 r3 -1                          #main[10]
copy  r2 r0                             #main[10]
load  r0 r0                             #main[10]
addi  r2 r2 -1                          #main[10]
load  r1 r2                             #main[10]
addi  r2 r2 -1                          #main[10]
load  pc r2                             #main[10]
addi  r1 r1 -6                          #main
addi  r1 r1 1                           #main.forceReturn.expr 0
const r2 0                              #main.forceReturn.expr 0
store r2 r1                             #main.forceReturn.expr 0
addi  r3 r0 -1                          #main.forceReturn
load  r3 r3                             #main.forceReturn
load  r2 r1                             #main.forceReturn
store r2 r3                             #main.forceReturn
addi  r1 r1 -1                          #main.forceReturn
addi  r3 r3 -1                          #main.forceReturn
copy  r2 r0                             #main.forceReturn
load  r0 r0                             #main.forceReturn
addi  r2 r2 -1                          #main.forceReturn
load  r1 r2                             #main.forceReturn
addi  r2 r2 -1                          #main.forceReturn
load  pc r2                             #main.forceReturn
nop                                     #main